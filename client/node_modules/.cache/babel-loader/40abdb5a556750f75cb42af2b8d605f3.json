{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport Constants from \"../lib/constants\";\nimport CookieUtil from \"./cookieUtil\";\n\n// Utility function to check if the input is a Date object\nconst isDate = date => date instanceof Date;\n\n// Utility function to format a date into a time string\nconst getTimeFromDate = date => {\n  const dateObj = isDate(date) ? date : new Date(date);\n  let hour = dateObj.getHours();\n  const minute = dateObj.getMinutes();\n  const meridian = hour >= 12 ? \"pm\" : \"am\";\n  hour = hour % 12 || 12; // Convert 24-hour time to 12-hour time\n  const formattedMinute = minute < 10 ? `0${minute}` : minute;\n  return `${hour}:${formattedMinute} ${meridian}`;\n};\n\n// Utility function to get the user ID from the JWT token\nconst getUserId = () => {\n  const token = CookieUtil.getCookie(Constants.ACCESS_PROPERTY);\n  if (token) {\n    try {\n      const decodedToken = jwt_decode(token);\n      return decodedToken.userId || \"\";\n    } catch (error) {\n      console.error(\"Failed to decode token:\", error);\n      return \"\";\n    }\n  }\n  return \"\";\n};\n\n// Utility function to format chat users\nconst getFormatedChatUser = (chatUsers, onlineUserList) => {\n  const userId = getUserId();\n  if (!Array.isArray(chatUsers)) {\n    console.warn(\"Expected chatUsers to be an array, but got:\", chatUsers);\n    return [];\n  }\n  return chatUsers.reduce((acumulator, item) => {\n    if (item.type === \"DM\" || item.type === \"SELF\") {\n      var _item$member, _item$member$find, _item$member2;\n      const newResult = {\n        roomId: item.roomId,\n        isOnline: onlineUserList === null || onlineUserList === void 0 ? void 0 : onlineUserList.includes((_item$member = item.member) === null || _item$member === void 0 ? void 0 : (_item$member$find = _item$member.find(user => user.id !== userId)) === null || _item$member$find === void 0 ? void 0 : _item$member$find.id)\n      };\n      const member = ((_item$member2 = item.member) === null || _item$member2 === void 0 ? void 0 : _item$member2.find(user => user.id !== userId)) || (item.type === \"SELF\" ? item.member[0] : null);\n      if (member) {\n        newResult.name = `${member.first_name} ${member.last_name}`;\n        newResult.image = member.image;\n        newResult.id = member.id;\n        acumulator.push(newResult);\n      }\n    }\n    return acumulator;\n  }, []);\n};\n\n// Utility function to get the active chat ID from the route match\nconst getActiveChatId = match => {\n  var _match$params;\n  return (match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.chatId) || null;\n};\n\n// Exporting utility functions\nconst CommonUtil = {\n  getTimeFromDate,\n  getUserId,\n  getFormatedChatUser,\n  getActiveChatId\n};\nexport default CommonUtil;","map":{"version":3,"names":["jwt_decode","Constants","CookieUtil","isDate","date","Date","getTimeFromDate","dateObj","hour","getHours","minute","getMinutes","meridian","formattedMinute","getUserId","token","getCookie","ACCESS_PROPERTY","decodedToken","userId","error","console","getFormatedChatUser","chatUsers","onlineUserList","Array","isArray","warn","reduce","acumulator","item","type","_item$member","_item$member$find","_item$member2","newResult","roomId","isOnline","includes","member","find","user","id","name","first_name","last_name","image","push","getActiveChatId","match","_match$params","params","chatId","CommonUtil"],"sources":["/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/util/commonUtil.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport Constants from \"../lib/constants\";\nimport CookieUtil from \"./cookieUtil\";\n\n// Utility function to check if the input is a Date object\nconst isDate = (date) => date instanceof Date;\n\n// Utility function to format a date into a time string\nconst getTimeFromDate = (date) => {\n  const dateObj = isDate(date) ? date : new Date(date);\n  let hour = dateObj.getHours();\n  const minute = dateObj.getMinutes();\n  const meridian = hour >= 12 ? \"pm\" : \"am\";\n\n  hour = hour % 12 || 12; // Convert 24-hour time to 12-hour time\n  const formattedMinute = minute < 10 ? `0${minute}` : minute;\n\n  return `${hour}:${formattedMinute} ${meridian}`;\n};\n\n// Utility function to get the user ID from the JWT token\nconst getUserId = () => {\n  const token = CookieUtil.getCookie(Constants.ACCESS_PROPERTY);\n  if (token) {\n    try {\n      const decodedToken = jwt_decode(token);\n      return decodedToken.userId || \"\";\n    } catch (error) {\n      console.error(\"Failed to decode token:\", error);\n      return \"\";\n    }\n  }\n  return \"\";\n};\n\n// Utility function to format chat users\nconst getFormatedChatUser = (chatUsers, onlineUserList) => {\n  const userId = getUserId();\n  \n  if (!Array.isArray(chatUsers)) {\n    console.warn(\"Expected chatUsers to be an array, but got:\", chatUsers);\n    return [];\n  }\n\n  return chatUsers.reduce((acumulator, item) => {\n    if (item.type === \"DM\" || item.type === \"SELF\") {\n      const newResult = {\n        roomId: item.roomId,\n        isOnline: onlineUserList?.includes(item.member?.find(user => user.id !== userId)?.id),\n      };\n\n      const member = item.member?.find(user => user.id !== userId) || (item.type === \"SELF\" ? item.member[0] : null);\n\n      if (member) {\n        newResult.name = `${member.first_name} ${member.last_name}`;\n        newResult.image = member.image;\n        newResult.id = member.id;\n        acumulator.push(newResult);\n      }\n    }\n    return acumulator;\n  }, []);\n};\n\n// Utility function to get the active chat ID from the route match\nconst getActiveChatId = (match) => match?.params?.chatId || null;\n\n// Exporting utility functions\nconst CommonUtil = {\n  getTimeFromDate,\n  getUserId,\n  getFormatedChatUser,\n  getActiveChatId,\n};\n\nexport default CommonUtil;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ts/Downloads/django-chat-main/client/src/components/sidebar/sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./sidebar.css\";\nimport { Link } from \"react-router-dom\";\nimport CookieUtil from \"../../util/cookieUtil\";\nimport AppPaths from \"../../lib/appPaths\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport Constants from \"../../lib/constants\";\nimport Modal from \"../modal/modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = props => {\n  _s();\n\n  const [chatUsers, setChatUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isShowAddPeopleModal, setIsShowAddPeopleModal] = useState(false); // Fetch and format chat users\n\n  const fetchChatUser = useCallback(async () => {\n    try {\n      const url = ApiEndpoints.USER_CHAT_URL.replace(Constants.USER_ID_PLACE_HOLDER, CommonUtil.getUserId());\n      const response = await ApiConnector.sendGetRequest(url);\n      const chatUsers = Array.isArray(response) ? response : [];\n      const formattedChatUser = CommonUtil.getFormatedChatUser(chatUsers, props.onlineUserList);\n      setChatUsers(formattedChatUser);\n      redirectUserToDefaultChatRoom(formattedChatUser);\n    } catch (error) {\n      console.error(\"Failed to fetch chat users:\", error);\n    }\n  }, [props.onlineUserList, props.history, props.match]);\n  useEffect(() => {\n    fetchChatUser();\n  }, [fetchChatUser]); // Redirect user to the default chat room or active chat\n\n  const redirectUserToDefaultChatRoom = chatUsers => {\n    var _props$location;\n\n    if (chatUsers.length === 0) return; // Handle case with no chat users\n\n    if ((props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.pathname) === AppPaths.HOME) {\n      props.setCurrentChattingMember(chatUsers[0]);\n      props.history.push(\"/c/\" + chatUsers[0].roomId);\n    } else {\n      const activeChatId = CommonUtil.getActiveChatId(props.match);\n      const chatUser = chatUsers.find(user => user.roomId === activeChatId);\n\n      if (chatUser) {\n        props.setCurrentChattingMember(chatUser);\n      }\n    }\n  }; // Get connected user IDs for excluding users\n\n\n  const getConnectedUserIds = () => {\n    return chatUsers.map(chatUser => chatUser.id).join(\",\");\n  }; // Fetch users excluding connected ones\n\n\n  const fetchUsers = async () => {\n    try {\n      const url = ApiEndpoints.USER_URL + \"?exclude=\" + getConnectedUserIds();\n      const users = await ApiConnector.sendGetRequest(url);\n      setUsers(users);\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  }; // Handle click to add people\n\n\n  const addPeopleClickHandler = async () => {\n    await fetchUsers();\n    setIsShowAddPeopleModal(true);\n  }; // Handle adding a new member to the chat\n\n\n  const addMemberClickHandler = async memberId => {\n    try {\n      const userId = CommonUtil.getUserId();\n      const requestBody = {\n        members: [memberId, userId],\n        type: \"DM\"\n      };\n      await ApiConnector.sendPostRequest(ApiEndpoints.CHAT_URL, JSON.stringify(requestBody), true, false);\n      await fetchChatUser(); // Refresh chat users list\n\n      setIsShowAddPeopleModal(false);\n    } catch (error) {\n      console.error(\"Failed to add member:\", error);\n    }\n  }; // Get active chat class for styling\n\n\n  const getActiveChatClass = roomId => {\n    const activeChatId = CommonUtil.getActiveChatId(props.match);\n    return roomId === activeChatId ? \"active-chat\" : \"\";\n  }; // Handle logout\n\n\n  const logoutClickHandler = () => {\n    CookieUtil.deleteCookie(Constants.ACCESS_PROPERTY);\n    CookieUtil.deleteCookie(Constants.REFRESH_PROPERTY);\n    window.location.href = AppPaths.LOGIN;\n  }; // Get the list of chat users with online status\n\n\n  const getChatListWithOnlineUser = () => {\n    return chatUsers.map(user => ({ ...user,\n      isOnline: props.onlineUserList.includes(user.id)\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-4 col-md-4 col-lg-4 col-xl-2 border-right\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-none d-md-block\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPeopleClickHandler,\n        className: \"btn btn-outline-warning btn-block my-1 mt-4\",\n        children: \"Add People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-container\",\n      children: getChatListWithOnlineUser().map(chatUser => /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.setCurrentChattingMember(chatUser),\n        to: `/c/${chatUser.roomId}`,\n        className: `pl-1 list-group-item list-group-item-action border-0 ${getActiveChatClass(chatUser.roomId)}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chatUser.image,\n            className: \"rounded-circle mr-1\",\n            alt: chatUser.name,\n            width: \"40\",\n            height: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1 ml-3\",\n            children: [chatUser.name, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small\",\n              children: chatUser.isOnline ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fas fa-circle chat-online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), \" Online\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fas fa-circle chat-offline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this), \" Offline\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, chatUser.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logoutClickHandler,\n      className: \"btn btn-outline-danger btn-block mt-1\",\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"d-block d-lg-none mt-1 mb-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      modalCloseHandler: () => setIsShowAddPeopleModal(false),\n      show: isShowAddPeopleModal,\n      children: users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-start pt-1 pb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.image,\n          className: \"rounded-circle mr-1\",\n          alt: user.first_name + \" \" + user.last_name,\n          width: \"40\",\n          height: \"40\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 ml-2 mr-5\",\n          children: user.first_name + \" \" + user.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addMemberClickHandler(user.id),\n          className: \"btn btn-sm btn-success\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No More Users Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"FMzZrWC/wsMpwPFiEpVShka5e3U=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/ts/Downloads/django-chat-main/client/src/components/sidebar/sidebar.js"],"names":["React","useEffect","useState","useCallback","Link","CookieUtil","AppPaths","ApiConnector","ApiEndpoints","CommonUtil","Constants","Modal","Sidebar","props","chatUsers","setChatUsers","users","setUsers","isShowAddPeopleModal","setIsShowAddPeopleModal","fetchChatUser","url","USER_CHAT_URL","replace","USER_ID_PLACE_HOLDER","getUserId","response","sendGetRequest","Array","isArray","formattedChatUser","getFormatedChatUser","onlineUserList","redirectUserToDefaultChatRoom","error","console","history","match","length","location","pathname","HOME","setCurrentChattingMember","push","roomId","activeChatId","getActiveChatId","chatUser","find","user","getConnectedUserIds","map","id","join","fetchUsers","USER_URL","addPeopleClickHandler","addMemberClickHandler","memberId","userId","requestBody","members","type","sendPostRequest","CHAT_URL","JSON","stringify","getActiveChatClass","logoutClickHandler","deleteCookie","ACCESS_PROPERTY","REFRESH_PROPERTY","window","href","LOGIN","getChatListWithOnlineUser","isOnline","includes","image","name","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./sidebar.css\";\nimport { Link } from \"react-router-dom\";\nimport CookieUtil from \"../../util/cookieUtil\";\nimport AppPaths from \"../../lib/appPaths\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport Constants from \"../../lib/constants\";\nimport Modal from \"../modal/modal\";\n\nconst Sidebar = (props) => {\n  const [chatUsers, setChatUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isShowAddPeopleModal, setIsShowAddPeopleModal] = useState(false);\n\n  // Fetch and format chat users\n  const fetchChatUser = useCallback(async () => {\n    try {\n      const url = ApiEndpoints.USER_CHAT_URL.replace(\n        Constants.USER_ID_PLACE_HOLDER,\n        CommonUtil.getUserId()\n      );\n      const response = await ApiConnector.sendGetRequest(url);\n      const chatUsers = Array.isArray(response) ? response : [];\n      const formattedChatUser = CommonUtil.getFormatedChatUser(\n        chatUsers,\n        props.onlineUserList\n      );\n      setChatUsers(formattedChatUser);\n      redirectUserToDefaultChatRoom(formattedChatUser);\n    } catch (error) {\n      console.error(\"Failed to fetch chat users:\", error);\n    }\n  }, [props.onlineUserList, props.history, props.match]);\n\n  useEffect(() => {\n    fetchChatUser();\n  }, [fetchChatUser]);\n\n  // Redirect user to the default chat room or active chat\n  const redirectUserToDefaultChatRoom = (chatUsers) => {\n    if (chatUsers.length === 0) return; // Handle case with no chat users\n\n    if (props?.location?.pathname === AppPaths.HOME) {\n      props.setCurrentChattingMember(chatUsers[0]);\n      props.history.push(\"/c/\" + chatUsers[0].roomId);\n    } else {\n      const activeChatId = CommonUtil.getActiveChatId(props.match);\n      const chatUser = chatUsers.find((user) => user.roomId === activeChatId);\n      if (chatUser) {\n        props.setCurrentChattingMember(chatUser);\n      }\n    }\n  };\n\n  // Get connected user IDs for excluding users\n  const getConnectedUserIds = () => {\n    return chatUsers.map((chatUser) => chatUser.id).join(\",\");\n  };\n\n  // Fetch users excluding connected ones\n  const fetchUsers = async () => {\n    try {\n      const url = ApiEndpoints.USER_URL + \"?exclude=\" + getConnectedUserIds();\n      const users = await ApiConnector.sendGetRequest(url);\n      setUsers(users);\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  };\n\n  // Handle click to add people\n  const addPeopleClickHandler = async () => {\n    await fetchUsers();\n    setIsShowAddPeopleModal(true);\n  };\n\n  // Handle adding a new member to the chat\n  const addMemberClickHandler = async (memberId) => {\n    try {\n      const userId = CommonUtil.getUserId();\n      const requestBody = {\n        members: [memberId, userId],\n        type: \"DM\",\n      };\n      await ApiConnector.sendPostRequest(\n        ApiEndpoints.CHAT_URL,\n        JSON.stringify(requestBody),\n        true,\n        false\n      );\n      await fetchChatUser(); // Refresh chat users list\n      setIsShowAddPeopleModal(false);\n    } catch (error) {\n      console.error(\"Failed to add member:\", error);\n    }\n  };\n\n  // Get active chat class for styling\n  const getActiveChatClass = (roomId) => {\n    const activeChatId = CommonUtil.getActiveChatId(props.match);\n    return roomId === activeChatId ? \"active-chat\" : \"\";\n  };\n\n  // Handle logout\n  const logoutClickHandler = () => {\n    CookieUtil.deleteCookie(Constants.ACCESS_PROPERTY);\n    CookieUtil.deleteCookie(Constants.REFRESH_PROPERTY);\n    window.location.href = AppPaths.LOGIN;\n  };\n\n  // Get the list of chat users with online status\n  const getChatListWithOnlineUser = () => {\n    return chatUsers.map((user) => ({\n      ...user,\n      isOnline: props.onlineUserList.includes(user.id),\n    }));\n  };\n\n  return (\n    <div className=\"col-12 col-sm-4 col-md-4 col-lg-4 col-xl-2 border-right\">\n      <div className=\"d-none d-md-block\">\n        <button\n          onClick={addPeopleClickHandler}\n          className=\"btn btn-outline-warning btn-block my-1 mt-4\"\n        >\n          Add People\n        </button>\n      </div>\n      <div className=\"user-list-container\">\n        {getChatListWithOnlineUser().map((chatUser) => (\n          <Link\n            key={chatUser.id}\n            onClick={() => props.setCurrentChattingMember(chatUser)}\n            to={`/c/${chatUser.roomId}`}\n            className={`pl-1 list-group-item list-group-item-action border-0 ${getActiveChatClass(chatUser.roomId)}`}\n          >\n            <div className=\"d-flex align-items-start\">\n              <img\n                src={chatUser.image}\n                className=\"rounded-circle mr-1\"\n                alt={chatUser.name}\n                width=\"40\"\n                height=\"40\"\n              />\n              <div className=\"flex-grow-1 ml-3\">\n                {chatUser.name}\n                <div className=\"small\">\n                  {chatUser.isOnline ? (\n                    <>\n                      <span className=\"fas fa-circle chat-online\"></span> Online\n                    </>\n                  ) : (\n                    <>\n                      <span className=\"fas fa-circle chat-offline\"></span> Offline\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n      <button\n        onClick={logoutClickHandler}\n        className=\"btn btn-outline-danger btn-block mt-1\"\n      >\n        Log Out\n      </button>\n      <hr className=\"d-block d-lg-none mt-1 mb-0\" />\n      <Modal\n        modalCloseHandler={() => setIsShowAddPeopleModal(false)}\n        show={isShowAddPeopleModal}\n      >\n        {users.length > 0 ? (\n          users.map((user) => (\n            <div\n              key={user.id}\n              className=\"d-flex align-items-start pt-1 pb-1\"\n            >\n              <img\n                src={user.image}\n                className=\"rounded-circle mr-1\"\n                alt={user.first_name + \" \" + user.last_name}\n                width=\"40\"\n                height=\"40\"\n              />\n              <div className=\"flex-grow-1 ml-2 mr-5\">\n                {user.first_name + \" \" + user.last_name}\n              </div>\n              <button\n                onClick={() => addMemberClickHandler(user.id)}\n                className=\"btn btn-sm btn-success\"\n              >\n                Add\n              </button>\n            </div>\n          ))\n        ) : (\n          <h3>No More Users Found</h3>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}
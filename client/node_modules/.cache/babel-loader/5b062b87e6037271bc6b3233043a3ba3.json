{"ast":null,"code":"var _jsxFileName = \"/home/ts/Downloads/django-chat-main/client/src/components/chatbody/ChatBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport ServerUrl from \"../../api/serverUrl\";\nimport Constants from \"../../lib/constants\";\nimport SocketActions from \"../../lib/socketActions\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport \"./chatBodyStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket = new WebSocket(ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`);\nlet typingTimer = 0;\nlet isTypingSignalSent = false;\n\nconst ChatBody = _ref => {\n  _s();\n\n  var _messages$results;\n\n  let {\n    match,\n    currentChattingMember,\n    setOnlineUserList\n  } = _ref;\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [messages, setMessages] = useState({});\n  const [typing, setTyping] = useState(false);\n  const fetchChatMessage = useCallback(async currentChatId => {\n    if (currentChatId) {\n      const url = ApiEndpoints.CHAT_MESSAGE_URL.replace(Constants.CHAT_ID_PLACE_HOLDER, currentChatId) + \"?limit=20&offset=0\";\n      const chatMessages = await ApiConnector.sendGetRequest(url);\n      setMessages(chatMessages);\n    }\n  }, []);\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessage(currentChatId);\n  }, [match, fetchChatMessage]);\n  const loggedInUserId = CommonUtil.getUserId();\n\n  const getChatMessageClassName = userId => {\n    return loggedInUserId === userId ? \"chat-message-right pb-3\" : \"chat-message-left pb-3\";\n  };\n\n  useEffect(() => {\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      const chatId = CommonUtil.getActiveChatId(match);\n      const userId = CommonUtil.getUserId();\n\n      if (chatId === data.roomId) {\n        if (data.action === SocketActions.MESSAGE) {\n          data[\"userImage\"] = ServerUrl.BASE_URL.slice(0, -1) + data.userImage;\n          setMessages(prevState => {\n            let messagesState = JSON.parse(JSON.stringify(prevState));\n            messagesState.results.unshift(data);\n            return messagesState;\n          });\n          setTyping(false);\n        } else if (data.action === SocketActions.TYPING && data.user !== userId) {\n          setTyping(data.typing);\n        }\n      }\n\n      if (data.action === SocketActions.ONLINE_USER) {\n        setOnlineUserList(data.userList);\n      }\n    };\n  }, [match, setOnlineUserList]);\n\n  const messageSubmitHandler = event => {\n    event.preventDefault();\n\n    if (inputMessage) {\n      socket.send(JSON.stringify({\n        action: SocketActions.MESSAGE,\n        message: inputMessage,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match)\n      }));\n    }\n\n    setInputMessage(\"\");\n  };\n\n  const sendTypingSignal = typing => {\n    socket.send(JSON.stringify({\n      action: SocketActions.TYPING,\n      typing: typing,\n      user: CommonUtil.getUserId(),\n      roomId: CommonUtil.getActiveChatId(match)\n    }));\n  };\n\n  const chatMessageTypingHandler = event => {\n    if (event.keyCode !== Constants.ENTER_KEY_CODE) {\n      if (!isTypingSignalSent) {\n        sendTypingSignal(true);\n        isTypingSignalSent = true;\n      }\n\n      clearTimeout(typingTimer);\n      typingTimer = setTimeout(() => {\n        sendTypingSignal(false);\n        isTypingSignalSent = false;\n      }, 3000);\n    } else {\n      clearTimeout(typingTimer);\n      isTypingSignalSent = false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-10 pl-0 pr-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 px-4 border-bottom d-none d-lg-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.image,\n            className: \"rounded-circle mr-1\",\n            alt: \"User\",\n            width: \"40\",\n            height: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 pl-3\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-message-container\",\n        className: \"chat-messages pl-4 pt-4 pr-4 pb-1 d-flex flex-column-reverse\",\n        children: [typing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message-left chat-bubble mb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), messages === null || messages === void 0 ? void 0 : (_messages$results = messages.results) === null || _messages$results === void 0 ? void 0 : _messages$results.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getChatMessageClassName(message.user),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.userImage,\n              className: \"rounded-circle mr-1\",\n              alt: message.userName,\n              width: \"40\",\n              height: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-muted small text-nowrap mt-2\",\n              children: CommonUtil.getTimeFromDate(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-1 bg-light ml-1 rounded py-2 px-3 mr-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-weight-bold mb-1\",\n              children: message.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), message.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-0 py-3 px-4 border-top\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: messageSubmitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setInputMessage(event.target.value),\n            onKeyUp: chatMessageTypingHandler,\n            value: inputMessage,\n            id: \"chat-message-input\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Type your message\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"chat-message-submit\",\n            className: \"btn btn-outline-warning\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBody, \"CGBDZHy8EVN8PZtR1z8yIZwtsl4=\");\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"sources":["/home/ts/Downloads/django-chat-main/client/src/components/chatbody/ChatBody.js"],"names":["React","useEffect","useState","useCallback","ApiConnector","ApiEndpoints","ServerUrl","Constants","SocketActions","CommonUtil","socket","WebSocket","WS_BASE_URL","getUserId","typingTimer","isTypingSignalSent","ChatBody","match","currentChattingMember","setOnlineUserList","inputMessage","setInputMessage","messages","setMessages","typing","setTyping","fetchChatMessage","currentChatId","url","CHAT_MESSAGE_URL","replace","CHAT_ID_PLACE_HOLDER","chatMessages","sendGetRequest","getActiveChatId","loggedInUserId","getChatMessageClassName","userId","onmessage","event","data","JSON","parse","chatId","roomId","action","MESSAGE","BASE_URL","slice","userImage","prevState","messagesState","stringify","results","unshift","TYPING","user","ONLINE_USER","userList","messageSubmitHandler","preventDefault","send","message","sendTypingSignal","chatMessageTypingHandler","keyCode","ENTER_KEY_CODE","clearTimeout","setTimeout","image","name","map","index","userName","getTimeFromDate","timestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport ServerUrl from \"../../api/serverUrl\";\nimport Constants from \"../../lib/constants\";\nimport SocketActions from \"../../lib/socketActions\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport \"./chatBodyStyle.css\";\n\nlet socket = new WebSocket(\n  ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`\n);\nlet typingTimer = 0;\nlet isTypingSignalSent = false;\n\nconst ChatBody = ({ match, currentChattingMember, setOnlineUserList }) => {\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [messages, setMessages] = useState({});\n  const [typing, setTyping] = useState(false);\n\n  const fetchChatMessage = useCallback(async (currentChatId) => {\n    if (currentChatId) {\n      const url =\n        ApiEndpoints.CHAT_MESSAGE_URL.replace(\n          Constants.CHAT_ID_PLACE_HOLDER,\n          currentChatId\n        ) + \"?limit=20&offset=0\";\n      const chatMessages = await ApiConnector.sendGetRequest(url);\n      setMessages(chatMessages);\n    }\n  }, []);\n\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessage(currentChatId);\n  }, [match, fetchChatMessage]);\n\n  const loggedInUserId = CommonUtil.getUserId();\n  const getChatMessageClassName = (userId) => {\n    return loggedInUserId === userId\n      ? \"chat-message-right pb-3\"\n      : \"chat-message-left pb-3\";\n  };\n\n  useEffect(() => {\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      const chatId = CommonUtil.getActiveChatId(match);\n      const userId = CommonUtil.getUserId();\n      if (chatId === data.roomId) {\n        if (data.action === SocketActions.MESSAGE) {\n          data[\"userImage\"] = ServerUrl.BASE_URL.slice(0, -1) + data.userImage;\n          setMessages((prevState) => {\n            let messagesState = JSON.parse(JSON.stringify(prevState));\n            messagesState.results.unshift(data);\n            return messagesState;\n          });\n          setTyping(false);\n        } else if (data.action === SocketActions.TYPING && data.user !== userId) {\n          setTyping(data.typing);\n        }\n      }\n      if (data.action === SocketActions.ONLINE_USER) {\n        setOnlineUserList(data.userList);\n      }\n    };\n  }, [match, setOnlineUserList]);\n\n  const messageSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputMessage) {\n      socket.send(\n        JSON.stringify({\n          action: SocketActions.MESSAGE,\n          message: inputMessage,\n          user: CommonUtil.getUserId(),\n          roomId: CommonUtil.getActiveChatId(match),\n        })\n      );\n    }\n    setInputMessage(\"\");\n  };\n\n  const sendTypingSignal = (typing) => {\n    socket.send(\n      JSON.stringify({\n        action: SocketActions.TYPING,\n        typing: typing,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match),\n      })\n    );\n  };\n\n  const chatMessageTypingHandler = (event) => {\n    if (event.keyCode !== Constants.ENTER_KEY_CODE) {\n      if (!isTypingSignalSent) {\n        sendTypingSignal(true);\n        isTypingSignalSent = true;\n      }\n      clearTimeout(typingTimer);\n      typingTimer = setTimeout(() => {\n        sendTypingSignal(false);\n        isTypingSignalSent = false;\n      }, 3000);\n    } else {\n      clearTimeout(typingTimer);\n      isTypingSignalSent = false;\n    }\n  };\n\n  return (\n    <div className=\"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-10 pl-0 pr-0\">\n      <div className=\"py-2 px-4 border-bottom d-none d-lg-block\">\n        <div className=\"d-flex align-items-center py-1\">\n          <div className=\"position-relative\">\n            <img\n              src={currentChattingMember?.image}\n              className=\"rounded-circle mr-1\"\n              alt=\"User\"\n              width=\"40\"\n              height=\"40\"\n            />\n          </div>\n          <div className=\"flex-grow-1 pl-3\">\n            <strong>{currentChattingMember?.name}</strong>\n          </div>\n        </div>\n      </div>\n      <div className=\"position-relative\">\n        <div\n          id=\"chat-message-container\"\n          className=\"chat-messages pl-4 pt-4 pr-4 pb-1 d-flex flex-column-reverse\"\n        >\n          {typing && (\n            <div className=\"chat-message-left chat-bubble mb-1\">\n              <div className=\"typing\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n              </div>\n            </div>\n          )}\n          {messages?.results?.map((message, index) => (\n            <div key={index} className={getChatMessageClassName(message.user)}>\n              <div>\n                <img\n                  src={message.userImage}\n                  className=\"rounded-circle mr-1\"\n                  alt={message.userName}\n                  width=\"40\"\n                  height=\"40\"\n                />\n                <div className=\"text-muted small text-nowrap mt-2\">\n                  {CommonUtil.getTimeFromDate(message.timestamp)}\n                </div>\n              </div>\n              <div className=\"flex-shrink-1 bg-light ml-1 rounded py-2 px-3 mr-3\">\n                <div className=\"font-weight-bold mb-1\">{message.userName}</div>\n                {message.message}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"flex-grow-0 py-3 px-4 border-top\">\n        <form onSubmit={messageSubmitHandler}>\n          <div className=\"input-group\">\n            <input\n              onChange={(event) => setInputMessage(event.target.value)}\n              onKeyUp={chatMessageTypingHandler}\n              value={inputMessage}\n              id=\"chat-message-input\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Type your message\"\n              autoComplete=\"off\"\n            />\n            <button\n              id=\"chat-message-submit\"\n              className=\"btn btn-outline-warning\"\n            >\n              Send\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBody;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/components/chatbody/ChatBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport ServerUrl from \"../../api/serverUrl\";\nimport Constants from \"../../lib/constants\";\nimport SocketActions from \"../../lib/socketActions\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport \"./chatBodyStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBody = _ref => {\n  _s();\n\n  let {\n    match,\n    currentChattingMember,\n    setOnlineUserList\n  } = _ref;\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [messages, setMessages] = useState({\n    results: []\n  });\n  const [typing, setTyping] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const socketRef = useRef(null);\n  const typingTimerRef = useRef(null);\n  const isTypingSignalSentRef = useRef(false);\n  const fetchChatMessage = useCallback(async currentChatId => {\n    if (currentChatId) {\n      try {\n        const url = ApiEndpoints.CHAT_MESSAGE_URL.replace(Constants.CHAT_ID_PLACE_HOLDER, currentChatId) + \"?limit=20&offset=0\";\n        const chatMessages = await ApiConnector.sendGetRequest(url);\n        setMessages(chatMessages);\n      } catch (error) {\n        console.error(\"Failed to fetch chat messages:\", error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessage(currentChatId);\n  }, [match, fetchChatMessage]);\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socketRef.current = new WebSocket(ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`);\n\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      const chatId = CommonUtil.getActiveChatId(match);\n      const userId = CommonUtil.getUserId();\n\n      if (chatId === data.roomId) {\n        if (data.action === SocketActions.MESSAGE) {\n          data[\"userImage\"] = ServerUrl.BASE_URL.slice(0, -1) + data.userImage;\n          setMessages(prevState => ({ ...prevState,\n            results: [data, ...prevState.results]\n          }));\n          setTyping(false);\n        } else if (data.action === SocketActions.TYPING && data.user !== userId) {\n          setTyping(data.typing);\n        }\n      }\n\n      if (data.action === SocketActions.ONLINE_USER) {\n        setOnlineUserList(data.userList);\n      }\n    };\n\n    socketRef.current.addEventListener(\"message\", handleMessage); // Cleanup WebSocket connection\n\n    return () => {\n      socketRef.current.removeEventListener(\"message\", handleMessage);\n      socketRef.current.close();\n    };\n  }, [match, setOnlineUserList]);\n  const loggedInUserId = CommonUtil.getUserId();\n\n  const getChatMessageClassName = userId => {\n    return loggedInUserId === userId ? \"chat-message-right pb-3\" : \"chat-message-left pb-3\";\n  };\n\n  const messageSubmitHandler = event => {\n    event.preventDefault();\n\n    if (inputMessage || selectedFile) {\n      const messageData = {\n        action: SocketActions.MESSAGE,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match)\n      };\n\n      if (inputMessage) {\n        messageData.message = inputMessage;\n        messageData.message_type = 'text';\n      }\n\n      if (selectedFile) {\n        // Convert file to Base64\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n          messageData.media_file = reader.result;\n          messageData.message_type = selectedFile.type.startsWith('image/') ? 'image' : 'document'; // Send message through WebSocket\n\n          socketRef.current.send(JSON.stringify(messageData));\n        };\n\n        reader.readAsDataURL(selectedFile);\n      } else {\n        // Send message through WebSocket\n        socketRef.current.send(JSON.stringify(messageData));\n      }\n    }\n\n    setInputMessage(\"\");\n    setSelectedFile(null);\n  };\n\n  const sendTypingSignal = typing => {\n    socketRef.current.send(JSON.stringify({\n      action: SocketActions.TYPING,\n      typing: typing,\n      user: CommonUtil.getUserId(),\n      roomId: CommonUtil.getActiveChatId(match)\n    }));\n  };\n\n  const chatMessageTypingHandler = event => {\n    if (event.keyCode !== Constants.ENTER_KEY_CODE) {\n      if (!isTypingSignalSentRef.current) {\n        sendTypingSignal(true);\n        isTypingSignalSentRef.current = true;\n      }\n\n      clearTimeout(typingTimerRef.current);\n      typingTimerRef.current = setTimeout(() => {\n        sendTypingSignal(false);\n        isTypingSignalSentRef.current = false;\n      }, 3000);\n    } else {\n      clearTimeout(typingTimerRef.current);\n      isTypingSignalSentRef.current = false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-10 pl-0 pr-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 px-4 border-bottom d-none d-lg-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.image) || '/path/to/default-image.png' // Default image if none provided\n            ,\n            className: \"rounded-circle mr-1\",\n            alt: \"User\",\n            width: \"40\",\n            height: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 pl-3\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: (currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.name) || 'Unknown User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-message-container\",\n        className: \"chat-messages pl-4 pt-4 pr-4 pb-1 d-flex flex-column-reverse\",\n        children: [typing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message-left chat-bubble mb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), messages.results.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getChatMessageClassName(message.user),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.userImage || '/path/to/default-image.png' // Default image if none provided\n              ,\n              className: \"rounded-circle mr-1\",\n              alt: message.userName,\n              width: \"40\",\n              height: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: CommonUtil.getTimeFromDate(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-1 bg-light ml-1 rounded py-2 px-3 mr-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-weight-bold mb-1\",\n              children: message.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), message.message_type === 'text' && message.message, message.message_type === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.media_file,\n                alt: \"media preview\",\n                className: \"img-fluid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: message.media_file.split('/').pop()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), message.message_type === 'document' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: message.media_file,\n                download: true,\n                children: \"Download Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: message.media_file.split('/').pop()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), message.message_type === 'contact' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Contact: \", message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-0 py-3 px-4 border-top\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: messageSubmitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setInputMessage(event.target.value),\n            onKeyUp: chatMessageTypingHandler,\n            value: inputMessage,\n            id: \"chat-message-input\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Type your message\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"chat-message-file\",\n            className: \"form-control\",\n            onChange: event => setSelectedFile(event.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"chat-message-submit\",\n            className: \"btn btn-outline-warning\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBody, \"2wR1CQO6XbslYWocrv7RfP5CxHA=\");\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"sources":["/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/components/chatbody/ChatBody.js"],"names":["React","useEffect","useState","useCallback","useRef","ApiConnector","ApiEndpoints","ServerUrl","Constants","SocketActions","CommonUtil","ChatBody","match","currentChattingMember","setOnlineUserList","inputMessage","setInputMessage","messages","setMessages","results","typing","setTyping","selectedFile","setSelectedFile","socketRef","typingTimerRef","isTypingSignalSentRef","fetchChatMessage","currentChatId","url","CHAT_MESSAGE_URL","replace","CHAT_ID_PLACE_HOLDER","chatMessages","sendGetRequest","error","console","getActiveChatId","current","WebSocket","WS_BASE_URL","getUserId","handleMessage","event","data","JSON","parse","chatId","userId","roomId","action","MESSAGE","BASE_URL","slice","userImage","prevState","TYPING","user","ONLINE_USER","userList","addEventListener","removeEventListener","close","loggedInUserId","getChatMessageClassName","messageSubmitHandler","preventDefault","messageData","message","message_type","reader","FileReader","onloadend","media_file","result","type","startsWith","send","stringify","readAsDataURL","sendTypingSignal","chatMessageTypingHandler","keyCode","ENTER_KEY_CODE","clearTimeout","setTimeout","image","name","map","index","userName","getTimeFromDate","timestamp","split","pop","target","value","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAyD;AAAA;;AAAA,MAAxD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,qBAAT;AAAgCC,IAAAA;AAAhC,GAAwD;AACxE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC;AAAEiB,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMsB,SAAS,GAAGpB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMqB,cAAc,GAAGrB,MAAM,CAAC,IAAD,CAA7B;AACA,QAAMsB,qBAAqB,GAAGtB,MAAM,CAAC,KAAD,CAApC;AAEA,QAAMuB,gBAAgB,GAAGxB,WAAW,CAAC,MAAOyB,aAAP,IAAyB;AAC5D,QAAIA,aAAJ,EAAmB;AACjB,UAAI;AACF,cAAMC,GAAG,GACPvB,YAAY,CAACwB,gBAAb,CAA8BC,OAA9B,CACEvB,SAAS,CAACwB,oBADZ,EAEEJ,aAFF,IAGI,oBAJN;AAKA,cAAMK,YAAY,GAAG,MAAM5B,YAAY,CAAC6B,cAAb,CAA4BL,GAA5B,CAA3B;AACAX,QAAAA,WAAW,CAACe,YAAD,CAAX;AACD,OARD,CAQE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,gCAAd,EAAgDA,KAAhD;AACD;AACF;AACF,GAdmC,EAcjC,EAdiC,CAApC;AAgBAlC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,aAAa,GAAGlB,UAAU,CAAC2B,eAAX,CAA2BzB,KAA3B,CAAtB;AACAe,IAAAA,gBAAgB,CAACC,aAAD,CAAhB;AACD,GAHQ,EAGN,CAAChB,KAAD,EAAQe,gBAAR,CAHM,CAAT;AAKA1B,EAAAA,SAAS,CAAC,MAAM;AACd;AACAuB,IAAAA,SAAS,CAACc,OAAV,GAAoB,IAAIC,SAAJ,CAClBhC,SAAS,CAACiC,WAAV,GAAyB,YAAW9B,UAAU,CAAC+B,SAAX,EAAuB,QADzC,CAApB;;AAIA,UAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACC,IAAjB,CAAb;AACA,YAAMG,MAAM,GAAGrC,UAAU,CAAC2B,eAAX,CAA2BzB,KAA3B,CAAf;AACA,YAAMoC,MAAM,GAAGtC,UAAU,CAAC+B,SAAX,EAAf;;AAEA,UAAIM,MAAM,KAAKH,IAAI,CAACK,MAApB,EAA4B;AAC1B,YAAIL,IAAI,CAACM,MAAL,KAAgBzC,aAAa,CAAC0C,OAAlC,EAA2C;AACzCP,UAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoBrC,SAAS,CAAC6C,QAAV,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,IAAkCT,IAAI,CAACU,SAA3D;AACApC,UAAAA,WAAW,CAAEqC,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BpC,YAAAA,OAAO,EAAE,CAACyB,IAAD,EAAO,GAAGW,SAAS,CAACpC,OAApB;AAFiB,WAAhB,CAAD,CAAX;AAIAE,UAAAA,SAAS,CAAC,KAAD,CAAT;AACD,SAPD,MAOO,IAAIuB,IAAI,CAACM,MAAL,KAAgBzC,aAAa,CAAC+C,MAA9B,IAAwCZ,IAAI,CAACa,IAAL,KAAcT,MAA1D,EAAkE;AACvE3B,UAAAA,SAAS,CAACuB,IAAI,CAACxB,MAAN,CAAT;AACD;AACF;;AACD,UAAIwB,IAAI,CAACM,MAAL,KAAgBzC,aAAa,CAACiD,WAAlC,EAA+C;AAC7C5C,QAAAA,iBAAiB,CAAC8B,IAAI,CAACe,QAAN,CAAjB;AACD;AACF,KApBD;;AAsBAnC,IAAAA,SAAS,CAACc,OAAV,CAAkBsB,gBAAlB,CAAmC,SAAnC,EAA8ClB,aAA9C,EA5Bc,CA8Bd;;AACA,WAAO,MAAM;AACXlB,MAAAA,SAAS,CAACc,OAAV,CAAkBuB,mBAAlB,CAAsC,SAAtC,EAAiDnB,aAAjD;AACAlB,MAAAA,SAAS,CAACc,OAAV,CAAkBwB,KAAlB;AACD,KAHD;AAID,GAnCQ,EAmCN,CAAClD,KAAD,EAAQE,iBAAR,CAnCM,CAAT;AAqCA,QAAMiD,cAAc,GAAGrD,UAAU,CAAC+B,SAAX,EAAvB;;AACA,QAAMuB,uBAAuB,GAAIhB,MAAD,IAAY;AAC1C,WAAOe,cAAc,KAAKf,MAAnB,GACH,yBADG,GAEH,wBAFJ;AAGD,GAJD;;AAMA,QAAMiB,oBAAoB,GAAItB,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACuB,cAAN;;AACA,QAAInD,YAAY,IAAIO,YAApB,EAAkC;AAChC,YAAM6C,WAAW,GAAG;AAClBjB,QAAAA,MAAM,EAAEzC,aAAa,CAAC0C,OADJ;AAElBM,QAAAA,IAAI,EAAE/C,UAAU,CAAC+B,SAAX,EAFY;AAGlBQ,QAAAA,MAAM,EAAEvC,UAAU,CAAC2B,eAAX,CAA2BzB,KAA3B;AAHU,OAApB;;AAMA,UAAIG,YAAJ,EAAkB;AAChBoD,QAAAA,WAAW,CAACC,OAAZ,GAAsBrD,YAAtB;AACAoD,QAAAA,WAAW,CAACE,YAAZ,GAA2B,MAA3B;AACD;;AAED,UAAI/C,YAAJ,EAAkB;AAChB;AACA,cAAMgD,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,QAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvBL,UAAAA,WAAW,CAACM,UAAZ,GAAyBH,MAAM,CAACI,MAAhC;AACAP,UAAAA,WAAW,CAACE,YAAZ,GAA2B/C,YAAY,CAACqD,IAAb,CAAkBC,UAAlB,CAA6B,QAA7B,IACvB,OADuB,GAEvB,UAFJ,CAFuB,CAKvB;;AACApD,UAAAA,SAAS,CAACc,OAAV,CAAkBuC,IAAlB,CAAuBhC,IAAI,CAACiC,SAAL,CAAeX,WAAf,CAAvB;AACD,SAPD;;AAQAG,QAAAA,MAAM,CAACS,aAAP,CAAqBzD,YAArB;AACD,OAZD,MAYO;AACL;AACAE,QAAAA,SAAS,CAACc,OAAV,CAAkBuC,IAAlB,CAAuBhC,IAAI,CAACiC,SAAL,CAAeX,WAAf,CAAvB;AACD;AACF;;AACDnD,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAO,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAjCD;;AAmCA,QAAMyD,gBAAgB,GAAI5D,MAAD,IAAY;AACnCI,IAAAA,SAAS,CAACc,OAAV,CAAkBuC,IAAlB,CACEhC,IAAI,CAACiC,SAAL,CAAe;AACb5B,MAAAA,MAAM,EAAEzC,aAAa,CAAC+C,MADT;AAEbpC,MAAAA,MAAM,EAAEA,MAFK;AAGbqC,MAAAA,IAAI,EAAE/C,UAAU,CAAC+B,SAAX,EAHO;AAIbQ,MAAAA,MAAM,EAAEvC,UAAU,CAAC2B,eAAX,CAA2BzB,KAA3B;AAJK,KAAf,CADF;AAQD,GATD;;AAWA,QAAMqE,wBAAwB,GAAItC,KAAD,IAAW;AAC1C,QAAIA,KAAK,CAACuC,OAAN,KAAkB1E,SAAS,CAAC2E,cAAhC,EAAgD;AAC9C,UAAI,CAACzD,qBAAqB,CAACY,OAA3B,EAAoC;AAClC0C,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAtD,QAAAA,qBAAqB,CAACY,OAAtB,GAAgC,IAAhC;AACD;;AACD8C,MAAAA,YAAY,CAAC3D,cAAc,CAACa,OAAhB,CAAZ;AACAb,MAAAA,cAAc,CAACa,OAAf,GAAyB+C,UAAU,CAAC,MAAM;AACxCL,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAtD,QAAAA,qBAAqB,CAACY,OAAtB,GAAgC,KAAhC;AACD,OAHkC,EAGhC,IAHgC,CAAnC;AAID,KAVD,MAUO;AACL8C,MAAAA,YAAY,CAAC3D,cAAc,CAACa,OAAhB,CAAZ;AACAZ,MAAAA,qBAAqB,CAACY,OAAtB,GAAgC,KAAhC;AACD;AACF,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,uDAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACE;AACE,YAAA,GAAG,EAAE,CAAAzB,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEyE,KAAvB,KAAgC,4BADvC,CACqE;AADrE;AAEE,YAAA,SAAS,EAAC,qBAFZ;AAGE,YAAA,GAAG,EAAC,MAHN;AAIE,YAAA,KAAK,EAAC,IAJR;AAKE,YAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAA,sBAAS,CAAAzE,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAE0E,IAAvB,KAA+B;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,wBADL;AAEE,QAAA,SAAS,EAAC,8DAFZ;AAAA,mBAIGnE,MAAM,iBACL;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALJ,EAaGH,QAAQ,CAACE,OAAT,CAAiBqE,GAAjB,CAAqB,CAACpB,OAAD,EAAUqB,KAAV,kBACpB;AAAiB,UAAA,SAAS,EAAEzB,uBAAuB,CAACI,OAAO,CAACX,IAAT,CAAnD;AAAA,kCACE;AAAA,oCACE;AACE,cAAA,GAAG,EAAEW,OAAO,CAACd,SAAR,IAAqB,4BAD5B,CAC0D;AAD1D;AAEE,cAAA,SAAS,EAAC,qBAFZ;AAGE,cAAA,GAAG,EAAEc,OAAO,CAACsB,QAHf;AAIE,cAAA,KAAK,EAAC,IAJR;AAKE,cAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,wBACGhF,UAAU,CAACiF,eAAX,CAA2BvB,OAAO,CAACwB,SAAnC;AADH;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAK,YAAA,SAAS,EAAC,oDAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,wBAAwCxB,OAAO,CAACsB;AAAhD;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGtB,OAAO,CAACC,YAAR,KAAyB,MAAzB,IAAmCD,OAAO,CAACA,OAF9C,EAGGA,OAAO,CAACC,YAAR,KAAyB,OAAzB,iBACC;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAED,OAAO,CAACK,UAAlB;AAA8B,gBAAA,GAAG,EAAC,eAAlC;AAAkD,gBAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAML,OAAO,CAACK,UAAR,CAAmBoB,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B;AAAN;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EASG1B,OAAO,CAACC,YAAR,KAAyB,UAAzB,iBACC;AAAA,sCACE;AAAG,gBAAA,IAAI,EAAED,OAAO,CAACK,UAAjB;AAA6B,gBAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,0BAAML,OAAO,CAACK,UAAR,CAAmBoB,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B;AAAN;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,EAiBG1B,OAAO,CAACC,YAAR,KAAyB,SAAzB,iBACC;AAAA,sCAAeD,OAAO,CAACA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA,WAAUqB,KAAV;AAAA;AAAA;AAAA;AAAA,gBADD,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF,eAsEE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAExB,oBAAhB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,QAAQ,EAAGtB,KAAD,IAAW3B,eAAe,CAAC2B,KAAK,CAACoD,MAAN,CAAaC,KAAd,CADtC;AAEE,YAAA,OAAO,EAAEf,wBAFX;AAGE,YAAA,KAAK,EAAElE,YAHT;AAIE,YAAA,EAAE,EAAC,oBAJL;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,SAAS,EAAC,cANZ;AAOE,YAAA,WAAW,EAAC,mBAPd;AAQE,YAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,mBAFL;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,QAAQ,EAAG4B,KAAD,IAAWpB,eAAe,CAACoB,KAAK,CAACoD,MAAN,CAAaE,KAAb,CAAmB,CAAnB,CAAD;AAJtC;AAAA;AAAA;AAAA;AAAA,kBAXF,eAiBE;AACE,YAAA,EAAE,EAAC,qBADL;AAEE,YAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqGD,CA/OD;;GAAMtF,Q;;KAAAA,Q;AAiPN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport ServerUrl from \"../../api/serverUrl\";\nimport Constants from \"../../lib/constants\";\nimport SocketActions from \"../../lib/socketActions\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport \"./chatBodyStyle.css\";\n\nconst ChatBody = ({ match, currentChattingMember, setOnlineUserList }) => {\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [messages, setMessages] = useState({ results: [] });\n  const [typing, setTyping] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const socketRef = useRef(null);\n  const typingTimerRef = useRef(null);\n  const isTypingSignalSentRef = useRef(false);\n\n  const fetchChatMessage = useCallback(async (currentChatId) => {\n    if (currentChatId) {\n      try {\n        const url =\n          ApiEndpoints.CHAT_MESSAGE_URL.replace(\n            Constants.CHAT_ID_PLACE_HOLDER,\n            currentChatId\n          ) + \"?limit=20&offset=0\";\n        const chatMessages = await ApiConnector.sendGetRequest(url);\n        setMessages(chatMessages);\n      } catch (error) {\n        console.error(\"Failed to fetch chat messages:\", error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessage(currentChatId);\n  }, [match, fetchChatMessage]);\n\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socketRef.current = new WebSocket(\n      ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`\n    );\n\n    const handleMessage = (event) => {\n      const data = JSON.parse(event.data);\n      const chatId = CommonUtil.getActiveChatId(match);\n      const userId = CommonUtil.getUserId();\n\n      if (chatId === data.roomId) {\n        if (data.action === SocketActions.MESSAGE) {\n          data[\"userImage\"] = ServerUrl.BASE_URL.slice(0, -1) + data.userImage;\n          setMessages((prevState) => ({\n            ...prevState,\n            results: [data, ...prevState.results],\n          }));\n          setTyping(false);\n        } else if (data.action === SocketActions.TYPING && data.user !== userId) {\n          setTyping(data.typing);\n        }\n      }\n      if (data.action === SocketActions.ONLINE_USER) {\n        setOnlineUserList(data.userList);\n      }\n    };\n\n    socketRef.current.addEventListener(\"message\", handleMessage);\n\n    // Cleanup WebSocket connection\n    return () => {\n      socketRef.current.removeEventListener(\"message\", handleMessage);\n      socketRef.current.close();\n    };\n  }, [match, setOnlineUserList]);\n\n  const loggedInUserId = CommonUtil.getUserId();\n  const getChatMessageClassName = (userId) => {\n    return loggedInUserId === userId\n      ? \"chat-message-right pb-3\"\n      : \"chat-message-left pb-3\";\n  };\n\n  const messageSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputMessage || selectedFile) {\n      const messageData = {\n        action: SocketActions.MESSAGE,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match),\n      };\n\n      if (inputMessage) {\n        messageData.message = inputMessage;\n        messageData.message_type = 'text';\n      }\n\n      if (selectedFile) {\n        // Convert file to Base64\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          messageData.media_file = reader.result;\n          messageData.message_type = selectedFile.type.startsWith('image/')\n            ? 'image'\n            : 'document';\n          // Send message through WebSocket\n          socketRef.current.send(JSON.stringify(messageData));\n        };\n        reader.readAsDataURL(selectedFile);\n      } else {\n        // Send message through WebSocket\n        socketRef.current.send(JSON.stringify(messageData));\n      }\n    }\n    setInputMessage(\"\");\n    setSelectedFile(null);\n  };\n\n  const sendTypingSignal = (typing) => {\n    socketRef.current.send(\n      JSON.stringify({\n        action: SocketActions.TYPING,\n        typing: typing,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match),\n      })\n    );\n  };\n\n  const chatMessageTypingHandler = (event) => {\n    if (event.keyCode !== Constants.ENTER_KEY_CODE) {\n      if (!isTypingSignalSentRef.current) {\n        sendTypingSignal(true);\n        isTypingSignalSentRef.current = true;\n      }\n      clearTimeout(typingTimerRef.current);\n      typingTimerRef.current = setTimeout(() => {\n        sendTypingSignal(false);\n        isTypingSignalSentRef.current = false;\n      }, 3000);\n    } else {\n      clearTimeout(typingTimerRef.current);\n      isTypingSignalSentRef.current = false;\n    }\n  };\n\n  return (\n    <div className=\"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-10 pl-0 pr-0\">\n      <div className=\"py-2 px-4 border-bottom d-none d-lg-block\">\n        <div className=\"d-flex align-items-center py-1\">\n          <div className=\"position-relative\">\n            <img\n              src={currentChattingMember?.image || '/path/to/default-image.png'} // Default image if none provided\n              className=\"rounded-circle mr-1\"\n              alt=\"User\"\n              width=\"40\"\n              height=\"40\"\n            />\n          </div>\n          <div className=\"flex-grow-1 pl-3\">\n            <strong>{currentChattingMember?.name || 'Unknown User'}</strong>\n          </div>\n        </div>\n      </div>\n      <div className=\"position-relative\">\n        <div\n          id=\"chat-message-container\"\n          className=\"chat-messages pl-4 pt-4 pr-4 pb-1 d-flex flex-column-reverse\"\n        >\n          {typing && (\n            <div className=\"chat-message-left chat-bubble mb-1\">\n              <div className=\"typing\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n              </div>\n            </div>\n          )}\n          {messages.results.map((message, index) => (\n            <div key={index} className={getChatMessageClassName(message.user)}>\n              <div>\n                <img\n                  src={message.userImage || '/path/to/default-image.png'} // Default image if none provided\n                  className=\"rounded-circle mr-1\"\n                  alt={message.userName}\n                  width=\"40\"\n                  height=\"40\"\n                />\n                <div className=\"\">\n                  {CommonUtil.getTimeFromDate(message.timestamp)}\n                </div>\n              </div>\n              <div className=\"flex-shrink-1 bg-light ml-1 rounded py-2 px-3 mr-3\">\n                <div className=\"font-weight-bold mb-1\">{message.userName}</div>\n                {message.message_type === 'text' && message.message}\n                {message.message_type === 'image' && (\n                  <div>\n                    <img src={message.media_file} alt=\"media preview\" className=\"img-fluid\" />\n                    <div>{message.media_file.split('/').pop()}</div> {/* Display file name */}\n                  </div>\n                )}\n                {message.message_type === 'document' && (\n                  <div>\n                    <a href={message.media_file} download>\n                      Download Document\n                    </a>\n                    <div>{message.media_file.split('/').pop()}</div> {/* Display file name */}\n                  </div>\n                )}\n                {message.message_type === 'contact' && (\n                  <div>Contact: {message.message}</div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"flex-grow-0 py-3 px-4 border-top\">\n        <form onSubmit={messageSubmitHandler}>\n          <div className=\"input-group\">\n            <input\n              onChange={(event) => setInputMessage(event.target.value)}\n              onKeyUp={chatMessageTypingHandler}\n              value={inputMessage}\n              id=\"chat-message-input\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Type your message\"\n              autoComplete=\"off\"\n            />\n            <input\n              type=\"file\"\n              id=\"chat-message-file\"\n              className=\"form-control\"\n              onChange={(event) => setSelectedFile(event.target.files[0])}\n            />\n            <button\n              id=\"chat-message-submit\"\n              className=\"btn btn-outline-warning\"\n            >\n              Send\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBody;\n"]},"metadata":{},"sourceType":"module"}
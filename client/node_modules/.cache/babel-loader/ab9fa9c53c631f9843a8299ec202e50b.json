{"ast":null,"code":"var _jsxFileName = \"/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/screens/auth/signup/SignupScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport ApiConnector from \"../../../api/apiConnector\";\nimport ApiEndpoints from \"../../../api/apiEndpoints\";\nimport AppPaths from \"../../../lib/appPaths\";\nimport \"../authStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupScreen = _ref => {\n  _s();\n\n  var _image$, _errors$passwordTwo;\n\n  let {\n    history\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\");\n  const image = watch(\"image\");\n\n  const onSubmit = async signupData => {\n    const formData = new FormData();\n    formData.append(\"image\", signupData.image[0]);\n    delete signupData[\"image\"];\n    Object.keys(signupData).forEach(key => {\n      formData.append(key, signupData[key]);\n    });\n    const successSignupData = await ApiConnector.sendPostRequest(ApiEndpoints.SIGN_UP_URL, formData, false, true);\n\n    if (successSignupData) {\n      history.push({\n        pathname: AppPaths.LOGIN,\n        state: {\n          redirectFrom: AppPaths.SIGN_UP\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"authFormContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"authForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"authTitle\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"text\",\n            placeholder: \"First Name\",\n            ...register(\"first_name\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), errors.first_name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"text\",\n            placeholder: \"Last Name\",\n            ...register(\"last_name\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), errors.last_name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"email\",\n            placeholder: \"Email\",\n            ...register(\"email\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            id: \"validatedCustomFile\",\n            ...register(\"image\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            htmlFor: \"validatedCustomFile\",\n            children: image ? (_image$ = image[0]) === null || _image$ === void 0 ? void 0 : _image$.name : \"Choose Image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), errors.image && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError mt-2\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"password\",\n            placeholder: \"Password\",\n            ...register(\"password\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"password\",\n            name: \"passwordTwo\",\n            placeholder: \"Confirm Password\",\n            ...register(\"passwordTwo\", {\n              required: \"This field is required\",\n              validate: value => value === password.current || \"The passwords doesn't match\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), errors.passwordTwo && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: (_errors$passwordTwo = errors.passwordTwo) === null || _errors$passwordTwo === void 0 ? void 0 : _errors$passwordTwo.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning btn-block\",\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"authFormFooter\",\n        children: [\"Already have an account. \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 36\n        }, this), \" to login.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupScreen, \"1eGNhJxWp0rU+3lB9Sb9VPmPqTs=\", false, function () {\n  return [useForm];\n});\n\n_c = SignupScreen;\nexport default SignupScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupScreen\");","map":{"version":3,"sources":["/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/screens/auth/signup/SignupScreen.js"],"names":["React","useRef","useForm","Link","ApiConnector","ApiEndpoints","AppPaths","SignupScreen","history","register","handleSubmit","formState","errors","watch","password","current","image","onSubmit","signupData","formData","FormData","append","Object","keys","forEach","key","successSignupData","sendPostRequest","SIGN_UP_URL","push","pathname","LOGIN","state","redirectFrom","SIGN_UP","required","first_name","last_name","email","name","validate","value","passwordTwo","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,YAAY,GAAG,QAAiB;AAAA;;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACpC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAHP;AAIJC,IAAAA;AAJI,MAKFX,OAAO,EALX;AAMA,QAAMY,QAAQ,GAAGb,MAAM,CAAC,EAAD,CAAvB;AACAa,EAAAA,QAAQ,CAACC,OAAT,GAAmBF,KAAK,CAAC,UAAD,CAAxB;AACA,QAAMG,KAAK,GAAGH,KAAK,CAAC,OAAD,CAAnB;;AAEA,QAAMI,QAAQ,GAAG,MAAOC,UAAP,IAAsB;AACrC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,UAAU,CAACF,KAAX,CAAiB,CAAjB,CAAzB;AACA,WAAOE,UAAU,CAAC,OAAD,CAAjB;AACAI,IAAAA,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwBM,OAAxB,CAAiCC,GAAD,IAAS;AACvCN,MAAAA,QAAQ,CAACE,MAAT,CAAgBI,GAAhB,EAAqBP,UAAU,CAACO,GAAD,CAA/B;AACD,KAFD;AAGA,UAAMC,iBAAiB,GAAG,MAAMtB,YAAY,CAACuB,eAAb,CAC9BtB,YAAY,CAACuB,WADiB,EAE9BT,QAF8B,EAG9B,KAH8B,EAI9B,IAJ8B,CAAhC;;AAMA,QAAIO,iBAAJ,EAAuB;AACrBlB,MAAAA,OAAO,CAACqB,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAExB,QAAQ,CAACyB,KADR;AAEXC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE3B,QAAQ,CAAC4B;AAAzB;AAFI,OAAb;AAID;AACF,GAnBD;;AAqBA,sBACE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAExB,YAAY,CAACO,QAAD,CAA5B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,YAHd;AAAA,eAIMR,QAAQ,CAAC,YAAD,EAAe;AAAE0B,cAAAA,QAAQ,EAAE;AAAZ,aAAf;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGvB,MAAM,CAACwB,UAAP,iBACC;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,WAHd;AAAA,eAIM3B,QAAQ,CAAC,WAAD,EAAc;AAAE0B,cAAAA,QAAQ,EAAE;AAAZ,aAAd;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGvB,MAAM,CAACyB,SAAP,iBACC;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,WAAW,EAAC,OAHd;AAAA,eAIM5B,QAAQ,CAAC,OAAD,EAAU;AAAE0B,cAAAA,QAAQ,EAAE;AAAZ,aAAV;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGvB,MAAM,CAAC0B,KAAP,iBACC;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAkCE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,EAAE,EAAC,qBAHL;AAAA,eAIM7B,QAAQ,CAAC,OAAD,EAAU;AACpB0B,cAAAA,QAAQ,EAAE;AADU,aAAV;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAO,YAAA,SAAS,EAAC,mBAAjB;AAAqC,YAAA,OAAO,EAAC,qBAA7C;AAAA,sBACGnB,KAAK,cAAGA,KAAK,CAAC,CAAD,CAAR,4CAAG,QAAUuB,IAAb,GAAoB;AAD5B;AAAA;AAAA;AAAA;AAAA,kBATF,EAYG3B,MAAM,CAACI,KAAP,iBACC;AAAG,YAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF,eAkDE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,WAAW,EAAC,UAHd;AAAA,eAIMP,QAAQ,CAAC,UAAD,EAAa;AAAE0B,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGvB,MAAM,CAACE,QAAP,iBACC;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDF,eA6DE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,IAAI,EAAC,aAHP;AAIE,YAAA,WAAW,EAAC,kBAJd;AAAA,eAKML,QAAQ,CAAC,aAAD,EAAgB;AAC1B0B,cAAAA,QAAQ,EAAE,wBADgB;AAE1BK,cAAAA,QAAQ,EAAGC,KAAD,IACRA,KAAK,KAAK3B,QAAQ,CAACC,OAAnB,IAA8B;AAHN,aAAhB;AALd;AAAA;AAAA;AAAA;AAAA,kBADF,EAYGH,MAAM,CAAC8B,WAAP,iBACC;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA,6CACG9B,MAAM,CAAC8B,WADV,wDACG,oBAAoBC;AADvB;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DF,eA+EE;AAAA;AAAA;AAAA;AAAA,gBA/EF,eAgFE;AAAQ,UAAA,SAAS,EAAC,mCAAlB;AAAsD,UAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAsFE;AAAG,QAAA,EAAE,EAAC,gBAAN;AAAA,6DAC2B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAtFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD,CA9HD;;GAAMpC,Y;UAMAL,O;;;KANAK,Y;AAgIN,eAAeA,YAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport ApiConnector from \"../../../api/apiConnector\";\nimport ApiEndpoints from \"../../../api/apiEndpoints\";\nimport AppPaths from \"../../../lib/appPaths\";\nimport \"../authStyle.css\";\n\nconst SignupScreen = ({ history }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\");\n  const image = watch(\"image\");\n\n  const onSubmit = async (signupData) => {\n    const formData = new FormData();\n    formData.append(\"image\", signupData.image[0]);\n    delete signupData[\"image\"];\n    Object.keys(signupData).forEach((key) => {\n      formData.append(key, signupData[key]);\n    });\n    const successSignupData = await ApiConnector.sendPostRequest(\n      ApiEndpoints.SIGN_UP_URL,\n      formData,\n      false,\n      true\n    );\n    if (successSignupData) {\n      history.push({\n        pathname: AppPaths.LOGIN,\n        state: { redirectFrom: AppPaths.SIGN_UP },\n      });\n    }\n  };\n\n  return (\n    <div id=\"authFormContainer\">\n      <div id=\"authForm\">\n        <h2 id=\"authTitle\">Sign Up</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"text\"\n              placeholder=\"First Name\"\n              {...register(\"first_name\", { required: true })}\n            />\n            {errors.first_name && (\n              <p className=\"requiredFieldError\">This field is required</p>\n            )}\n          </div>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"text\"\n              placeholder=\"Last Name\"\n              {...register(\"last_name\", { required: true })}\n            />\n            {errors.last_name && (\n              <p className=\"requiredFieldError\">This field is required</p>\n            )}\n          </div>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"email\"\n              placeholder=\"Email\"\n              {...register(\"email\", { required: true })}\n            />\n            {errors.email && (\n              <p className=\"requiredFieldError\">This field is required</p>\n            )}\n          </div>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              name=\"image\"\n              id=\"validatedCustomFile\"\n              {...register(\"image\", {\n                required: true,\n              })}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">\n              {image ? image[0]?.name : \"Choose Image...\"}\n            </label>\n            {errors.image && (\n              <p className=\"requiredFieldError mt-2\">This field is required</p>\n            )}\n          </div>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"password\"\n              placeholder=\"Password\"\n              {...register(\"password\", { required: true })}\n            />\n            {errors.password && (\n              <p className=\"requiredFieldError\">This field is required</p>\n            )}\n          </div>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"password\"\n              name=\"passwordTwo\"\n              placeholder=\"Confirm Password\"\n              {...register(\"passwordTwo\", {\n                required: \"This field is required\",\n                validate: (value) =>\n                  value === password.current || \"The passwords doesn't match\",\n              })}\n            />\n            {errors.passwordTwo && (\n              <p className=\"requiredFieldError\">\n                {errors.passwordTwo?.message}\n              </p>\n            )}\n          </div>\n          <br />\n          <button className=\"btn btn-outline-warning btn-block\" type=\"submit\">\n            Sign Up\n          </button>\n        </form>\n        <p id=\"authFormFooter\">\n          Already have an account. <Link to=\"/login\">Click here</Link> to login.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupScreen;\n"]},"metadata":{},"sourceType":"module"}
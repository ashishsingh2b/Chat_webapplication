{"ast":null,"code":"var _jsxFileName = \"/home/ts/Downloads/django-chat-main/client/src/components/sidebar/sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./sidebar.css\";\nimport { Link } from \"react-router-dom\";\nimport CookieUtil from \"../../util/cookieUtil\";\nimport AppPaths from \"../../lib/appPaths\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport Constants from \"../../lib/constants\";\nimport Modal from \"../modal/modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = props => {\n  _s();\n\n  var _getChatListWithOnlin;\n\n  const [chatUsers, setChatUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isShowAddPeopleModal, setIsShowAddPeopleModal] = useState(false);\n\n  const redirectUserToDefaultChatRoom = chatUsers => {\n    var _props$location;\n\n    if ((props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.pathname) === AppPaths.HOME) {\n      props.setCurrentChattingMember(chatUsers[0]);\n      props.history.push(\"/c/\" + chatUsers[0].roomId);\n    } else {\n      const activeChatId = CommonUtil.getActiveChatId(props.match);\n      const chatUser = chatUsers.find(user => user.roomId === activeChatId);\n      props.setCurrentChattingMember(chatUser);\n    }\n  };\n\n  const fetchChatUser = useCallback(async () => {\n    const url = ApiEndpoints.USER_CHAT_URL.replace(Constants.USER_ID_PLACE_HOLDER, CommonUtil.getUserId());\n    const response = await ApiConnector.sendGetRequest(url);\n    const chatUsers = Array.isArray(response) ? response : []; // Ensure chatUsers is always an array\n\n    const formattedChatUser = CommonUtil.getFormatedChatUser(chatUsers, props.onlineUserList);\n    setChatUsers(formattedChatUser);\n    redirectUserToDefaultChatRoom(formattedChatUser);\n  }, [props.onlineUserList, props.history, props.match]);\n  useEffect(() => {\n    fetchChatUser();\n  }, [fetchChatUser]);\n\n  const getConnectedUserIds = () => {\n    let connectedUsers = \"\";\n\n    for (let chatUser of chatUsers) {\n      connectedUsers += chatUser.id + \",\";\n    }\n\n    return connectedUsers.slice(0, -1);\n  };\n\n  const fetchUsers = async () => {\n    const url = ApiEndpoints.USER_URL + \"?exclude=\" + getConnectedUserIds();\n    const users = await ApiConnector.sendGetRequest(url);\n    setUsers(users);\n  };\n\n  const addPeopleClickHandler = async () => {\n    await fetchUsers();\n    setIsShowAddPeopleModal(true);\n  };\n\n  const addMemberClickHandler = async memberId => {\n    const userId = CommonUtil.getUserId();\n    let requestBody = {\n      members: [memberId, userId],\n      type: \"DM\"\n    };\n    await ApiConnector.sendPostRequest(ApiEndpoints.CHAT_URL, JSON.stringify(requestBody), true, false);\n    await fetchChatUser(); // Ensure fetchChatUser is awaited here\n\n    setIsShowAddPeopleModal(false);\n  };\n\n  const getActiveChatClass = roomId => {\n    let activeChatId = CommonUtil.getActiveChatId(props.match);\n    return roomId === activeChatId ? \"active-chat\" : \"\";\n  };\n\n  const logoutClickHandler = () => {\n    CookieUtil.deleteCookie(Constants.ACCESS_PROPERTY);\n    CookieUtil.deleteCookie(Constants.REFRESH_PROPERTY);\n    window.location.href = AppPaths.LOGIN;\n  };\n\n  const getChatListWithOnlineUser = () => {\n    let updatedChatList = chatUsers.map(user => {\n      if (props.onlineUserList.includes(user.id)) {\n        user.isOnline = true;\n      } else {\n        user.isOnline = false;\n      }\n\n      return user;\n    });\n    return updatedChatList;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-4 col-md-4 col-lg-4 col-xl-2 border-right\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-none d-md-block\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPeopleClickHandler,\n        className: \"btn btn-outline-warning btn-block my-1 mt-4\",\n        children: \"Add People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-container\",\n      children: (_getChatListWithOnlin = getChatListWithOnlineUser()) === null || _getChatListWithOnlin === void 0 ? void 0 : _getChatListWithOnlin.map(chatUser => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => props.setCurrentChattingMember(chatUser),\n          to: `/c/${chatUser.roomId}`,\n          className: \"pl-1 list-group-item list-group-item-action border-0 \" + getActiveChatClass(chatUser.roomId),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: chatUser.image,\n              className: \"rounded-circle mr-1\",\n              alt: chatUser.name,\n              width: \"40\",\n              height: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow-1 ml-3\",\n              children: [chatUser.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small\",\n                children: chatUser.isOnline ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fas fa-circle chat-online\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this), \" \", \"Online\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fas fa-circle chat-offline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 25\n                  }, this), \" \", \"offline\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, chatUser.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logoutClickHandler,\n      className: \"btn btn-outline-danger btn-block mt-1\",\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"d-block d-lg-none mt-1 mb-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      modalCloseHandler: () => setIsShowAddPeopleModal(false),\n      show: isShowAddPeopleModal,\n      children: users.length > 0 ? users === null || users === void 0 ? void 0 : users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-start pt-1 pb-1 d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.image,\n          className: \"rounded-circle mr-1\",\n          alt: user.first_name + \" \" + user.last_name,\n          width: \"40\",\n          height: \"40\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 ml-2 mr-5\",\n          children: user.first_name + \" \" + user.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addMemberClickHandler(user.id),\n          className: \"btn btn-sm btn-success\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No More User Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"FMzZrWC/wsMpwPFiEpVShka5e3U=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/ts/Downloads/django-chat-main/client/src/components/sidebar/sidebar.js"],"names":["React","useEffect","useState","useCallback","Link","CookieUtil","AppPaths","ApiConnector","ApiEndpoints","CommonUtil","Constants","Modal","Sidebar","props","chatUsers","setChatUsers","users","setUsers","isShowAddPeopleModal","setIsShowAddPeopleModal","redirectUserToDefaultChatRoom","location","pathname","HOME","setCurrentChattingMember","history","push","roomId","activeChatId","getActiveChatId","match","chatUser","find","user","fetchChatUser","url","USER_CHAT_URL","replace","USER_ID_PLACE_HOLDER","getUserId","response","sendGetRequest","Array","isArray","formattedChatUser","getFormatedChatUser","onlineUserList","getConnectedUserIds","connectedUsers","id","slice","fetchUsers","USER_URL","addPeopleClickHandler","addMemberClickHandler","memberId","userId","requestBody","members","type","sendPostRequest","CHAT_URL","JSON","stringify","getActiveChatClass","logoutClickHandler","deleteCookie","ACCESS_PROPERTY","REFRESH_PROPERTY","window","href","LOGIN","getChatListWithOnlineUser","updatedChatList","map","includes","isOnline","image","name","length","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./sidebar.css\";\nimport { Link } from \"react-router-dom\";\nimport CookieUtil from \"../../util/cookieUtil\";\nimport AppPaths from \"../../lib/appPaths\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport Constants from \"../../lib/constants\";\nimport Modal from \"../modal/modal\";\n\nconst Sidebar = (props) => {\n  const [chatUsers, setChatUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isShowAddPeopleModal, setIsShowAddPeopleModal] = useState(false);\n\n  const redirectUserToDefaultChatRoom = (chatUsers) => {\n    if (props?.location?.pathname === AppPaths.HOME) {\n      props.setCurrentChattingMember(chatUsers[0]);\n      props.history.push(\"/c/\" + chatUsers[0].roomId);\n    } else {\n      const activeChatId = CommonUtil.getActiveChatId(props.match);\n      const chatUser = chatUsers.find((user) => user.roomId === activeChatId);\n      props.setCurrentChattingMember(chatUser);\n    }\n  };\n\n  const fetchChatUser = useCallback(async () => {\n    const url = ApiEndpoints.USER_CHAT_URL.replace(\n      Constants.USER_ID_PLACE_HOLDER,\n      CommonUtil.getUserId()\n    );\n    const response = await ApiConnector.sendGetRequest(url);\n    const chatUsers = Array.isArray(response) ? response : []; // Ensure chatUsers is always an array\n    const formattedChatUser = CommonUtil.getFormatedChatUser(\n      chatUsers,\n      props.onlineUserList\n    );\n    setChatUsers(formattedChatUser);\n    redirectUserToDefaultChatRoom(formattedChatUser);\n  }, [props.onlineUserList, props.history, props.match]);\n\n  useEffect(() => {\n    fetchChatUser();\n  }, [fetchChatUser]);\n\n  const getConnectedUserIds = () => {\n    let connectedUsers = \"\";\n    for (let chatUser of chatUsers) {\n      connectedUsers += chatUser.id + \",\";\n    }\n    return connectedUsers.slice(0, -1);\n  };\n\n  const fetchUsers = async () => {\n    const url = ApiEndpoints.USER_URL + \"?exclude=\" + getConnectedUserIds();\n    const users = await ApiConnector.sendGetRequest(url);\n    setUsers(users);\n  };\n\n  const addPeopleClickHandler = async () => {\n    await fetchUsers();\n    setIsShowAddPeopleModal(true);\n  };\n\n  const addMemberClickHandler = async (memberId) => {\n    const userId = CommonUtil.getUserId();\n    let requestBody = {\n      members: [memberId, userId],\n      type: \"DM\",\n    };\n    await ApiConnector.sendPostRequest(\n      ApiEndpoints.CHAT_URL,\n      JSON.stringify(requestBody),\n      true,\n      false\n    );\n    await fetchChatUser(); // Ensure fetchChatUser is awaited here\n    setIsShowAddPeopleModal(false);\n  };\n\n  const getActiveChatClass = (roomId) => {\n    let activeChatId = CommonUtil.getActiveChatId(props.match);\n    return roomId === activeChatId ? \"active-chat\" : \"\";\n  };\n\n  const logoutClickHandler = () => {\n    CookieUtil.deleteCookie(Constants.ACCESS_PROPERTY);\n    CookieUtil.deleteCookie(Constants.REFRESH_PROPERTY);\n    window.location.href = AppPaths.LOGIN;\n  };\n\n  const getChatListWithOnlineUser = () => {\n    let updatedChatList = chatUsers.map((user) => {\n      if (props.onlineUserList.includes(user.id)) {\n        user.isOnline = true;\n      } else {\n        user.isOnline = false;\n      }\n      return user;\n    });\n    return updatedChatList;\n  };\n\n  return (\n    <div className=\"col-12 col-sm-4 col-md-4 col-lg-4 col-xl-2 border-right\">\n      <div className=\"d-none d-md-block\">\n        <button\n          onClick={addPeopleClickHandler}\n          className=\"btn btn-outline-warning btn-block my-1 mt-4\"\n        >\n          Add People\n        </button>\n      </div>\n      <div className=\"user-list-container\">\n        {getChatListWithOnlineUser()?.map((chatUser) => {\n          return (\n            <Link\n              onClick={() => props.setCurrentChattingMember(chatUser)}\n              to={`/c/${chatUser.roomId}`}\n              className={\n                \"pl-1 list-group-item list-group-item-action border-0 \" +\n                getActiveChatClass(chatUser.roomId)\n              }\n              key={chatUser.id}\n            >\n              <div className=\"d-flex align-items-start\">\n                <img\n                  src={chatUser.image}\n                  className=\"rounded-circle mr-1\"\n                  alt={chatUser.name}\n                  width=\"40\"\n                  height=\"40\"\n                />\n                <div className=\"flex-grow-1 ml-3\">\n                  {chatUser.name}\n                  <div className=\"small\">\n                    {chatUser.isOnline ? (\n                      <>\n                        <span className=\"fas fa-circle chat-online\"></span>{\" \"}\n                        Online\n                      </>\n                    ) : (\n                      <>\n                        <span className=\"fas fa-circle chat-offline\"></span>{\" \"}\n                        offline\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n      <button\n        onClick={logoutClickHandler}\n        className=\"btn btn-outline-danger btn-block mt-1\"\n      >\n        Log Out\n      </button>\n      <hr className=\"d-block d-lg-none mt-1 mb-0\" />\n      <Modal\n        modalCloseHandler={() => setIsShowAddPeopleModal(false)}\n        show={isShowAddPeopleModal}\n      >\n        {users.length > 0 ? (\n          users?.map((user) => (\n            <div\n              key={user.id}\n              className=\"d-flex align-items-start pt-1 pb-1 d-flex align-items-center\"\n            >\n              <img\n                src={user.image}\n                className=\"rounded-circle mr-1\"\n                alt={user.first_name + \" \" + user.last_name}\n                width=\"40\"\n                height=\"40\"\n              />\n              <div className=\"flex-grow-1 ml-2 mr-5\">\n                {user.first_name + \" \" + user.last_name}\n              </div>\n              <button\n                onClick={() => addMemberClickHandler(user.id)}\n                className=\"btn btn-sm btn-success\"\n              >\n                Add\n              </button>\n            </div>\n          ))\n        ) : (\n          <h3>No More User Found</h3>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}
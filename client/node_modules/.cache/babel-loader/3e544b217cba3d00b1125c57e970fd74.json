{"ast":null,"code":"var _jsxFileName = \"/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/components/chatbody/ChatBody.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport ServerUrl from \"../../api/serverUrl\";\nimport Constants from \"../../lib/constants\";\nimport SocketActions from \"../../lib/socketActions\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport \"./chatBodyStyle.css\";\nimport { FaPaperclip } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom'; // Import useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBody = ({\n  match,\n  currentChattingMember,\n  setOnlineUserList\n}) => {\n  _s();\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [messages, setMessages] = useState({\n    results: []\n  });\n  const [typing, setTyping] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const socketRef = useRef(null);\n  const typingTimerRef = useRef(null);\n  const isTypingSignalSentRef = useRef(false);\n  const history = useHistory(); // Use useHistory for navigation\n\n  const getDateLabel = timestamp => {\n    const messageDate = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(today.getDate() - 1);\n    if (messageDate.toDateString() === today.toDateString()) {\n      return \"Today\";\n    } else if (messageDate.toDateString() === yesterday.toDateString()) {\n      return \"Yesterday\";\n    } else {\n      return messageDate.toLocaleDateString();\n    }\n  };\n  const fetchChatMessage = useCallback(async currentChatId => {\n    if (currentChatId) {\n      try {\n        const url = ApiEndpoints.CHAT_MESSAGE_URL.replace(Constants.CHAT_ID_PLACE_HOLDER, currentChatId) + \"?limit=20&offset=0\";\n        const chatMessages = await ApiConnector.sendGetRequest(url);\n        const messagesWithLabels = chatMessages.results.map(message => ({\n          ...message,\n          dateLabel: getDateLabel(message.timestamp)\n        }));\n        setMessages({\n          results: messagesWithLabels\n        });\n      } catch (error) {\n        console.error(\"Failed to fetch chat messages:\", error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessage(currentChatId);\n  }, [match, fetchChatMessage]);\n  useEffect(() => {\n    socketRef.current = new WebSocket(ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`);\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      const chatId = CommonUtil.getActiveChatId(match);\n      const userId = CommonUtil.getUserId();\n      if (chatId === data.roomId) {\n        if (data.action === SocketActions.MESSAGE) {\n          data[\"userImage\"] = ServerUrl.BASE_URL.slice(0, -1) + data.userImage;\n          data.dateLabel = getDateLabel(data.timestamp);\n          setMessages(prevState => ({\n            results: [data, ...prevState.results]\n          }));\n          setTyping(false);\n        } else if (data.action === SocketActions.TYPING && data.user !== userId) {\n          setTyping(data.typing);\n        }\n      }\n      if (data.action === SocketActions.ONLINE_USER) {\n        setOnlineUserList(data.userList);\n      }\n    };\n    socketRef.current.addEventListener(\"message\", handleMessage);\n    return () => {\n      socketRef.current.removeEventListener(\"message\", handleMessage);\n      socketRef.current.close();\n    };\n  }, [match, setOnlineUserList]);\n  const loggedInUserId = CommonUtil.getUserId();\n  const getChatMessageClassName = userId => {\n    return loggedInUserId === userId ? \"chat-message-right pb-3\" : \"chat-message-left pb-3\";\n  };\n  const messageSubmitHandler = event => {\n    event.preventDefault();\n    if (inputMessage || selectedFile) {\n      const messageData = {\n        action: SocketActions.MESSAGE,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match),\n        timestamp: new Date().toISOString()\n      };\n      if (inputMessage) {\n        messageData.message = inputMessage;\n        messageData.message_type = 'text';\n      }\n      if (selectedFile) {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          messageData.media_file = reader.result;\n          messageData.message_type = selectedFile.type.startsWith('image/') ? 'image' : 'document';\n          socketRef.current.send(JSON.stringify(messageData));\n        };\n        reader.readAsDataURL(selectedFile);\n      } else {\n        socketRef.current.send(JSON.stringify(messageData));\n      }\n    }\n    setInputMessage(\"\");\n    setSelectedFile(null);\n  };\n  const sendTypingSignal = typing => {\n    socketRef.current.send(JSON.stringify({\n      action: SocketActions.TYPING,\n      typing: typing,\n      user: CommonUtil.getUserId(),\n      roomId: CommonUtil.getActiveChatId(match)\n    }));\n  };\n  const chatMessageTypingHandler = event => {\n    if (event.keyCode !== Constants.ENTER_KEY_CODE) {\n      if (!isTypingSignalSentRef.current) {\n        sendTypingSignal(true);\n        isTypingSignalSentRef.current = true;\n      }\n      clearTimeout(typingTimerRef.current);\n      typingTimerRef.current = setTimeout(() => {\n        sendTypingSignal(false);\n        isTypingSignalSentRef.current = false;\n      }, 3000);\n    } else {\n      clearTimeout(typingTimerRef.current);\n      isTypingSignalSentRef.current = false;\n    }\n  };\n  const handleImageClick = src => {\n    setPreviewImage(src);\n  };\n  const closePreview = () => {\n    setPreviewImage(null);\n  };\n  const handleProfileClick = () => {\n    const userId = currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.id; // or however you get the user ID\n    history.push(`/profile/${userId}`); // Navigate to profile page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-10 pl-0 pr-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 px-4 border-bottom d-none d-lg-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.image) || '/path/to/default-image.png',\n            className: \"rounded-circle mr-1\",\n            alt: \"User\",\n            width: \"40\",\n            height: \"40\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: handleProfileClick // Add click handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 pl-3\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: handleProfileClick // Add click handler\n            ,\n            children: (currentChattingMember === null || currentChattingMember === void 0 ? void 0 : currentChattingMember.name) || 'Unknown User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-message-container\",\n        className: \"chat-messages pl-4 pt-4 pr-4 pb-1 d-flex flex-column-reverse\",\n        children: [typing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message-left chat-bubble mb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), messages.results.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [index === 0 || messages.results[index - 1].dateLabel !== message.dateLabel ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-date-label\",\n            children: message.dateLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getChatMessageClassName(message.user),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.userImage || '/path/to/default-image.png',\n                className: \"rounded-circle mr-1\",\n                alt: message.userName,\n                width: \"40\",\n                height: \"40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: CommonUtil.getTimeFromDate(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-1 bg-light ml-1 rounded py-2 px-3 mr-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-weight-bold mb-1\",\n                children: message.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), message.message_type === 'text' && message.message, message.message_type === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: message.media_file,\n                  alt: \"media preview\",\n                  style: {\n                    maxWidth: '300px',\n                    maxHeight: '300px',\n                    cursor: 'pointer'\n                  },\n                  onClick: () => handleImageClick(message.media_file)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), message.message_type === 'document' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Document: \", message.media_file]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), message.message_type === 'contact' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Contact: \", message.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-0 py-3 px-4 border-top\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: messageSubmitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-group-text\",\n              htmlFor: \"chat-message-file\",\n              children: /*#__PURE__*/_jsxDEV(FaPaperclip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"chat-message-file\",\n              className: \"d-none\",\n              onChange: event => setSelectedFile(event.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setInputMessage(event.target.value),\n            onKeyUp: chatMessageTypingHandler,\n            value: inputMessage,\n            id: \"chat-message-input\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Type your message\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"chat-message-submit\",\n            className: \"btn btn-outline-warning\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-modal\",\n      onClick: closePreview,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage,\n        alt: \"Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBody, \"jRFFRrFHM4FbcHAtn5tZEInt/mk=\", false, function () {\n  return [useHistory];\n});\n_c = ChatBody;\nexport default ChatBody;\nvar _c;\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","ApiConnector","ApiEndpoints","ServerUrl","Constants","SocketActions","CommonUtil","FaPaperclip","useHistory","jsxDEV","_jsxDEV","ChatBody","match","currentChattingMember","setOnlineUserList","_s","inputMessage","setInputMessage","messages","setMessages","results","typing","setTyping","selectedFile","setSelectedFile","previewImage","setPreviewImage","socketRef","typingTimerRef","isTypingSignalSentRef","history","getDateLabel","timestamp","messageDate","Date","today","yesterday","setDate","getDate","toDateString","toLocaleDateString","fetchChatMessage","currentChatId","url","CHAT_MESSAGE_URL","replace","CHAT_ID_PLACE_HOLDER","chatMessages","sendGetRequest","messagesWithLabels","map","message","dateLabel","error","console","getActiveChatId","current","WebSocket","WS_BASE_URL","getUserId","handleMessage","event","data","JSON","parse","chatId","userId","roomId","action","MESSAGE","BASE_URL","slice","userImage","prevState","TYPING","user","ONLINE_USER","userList","addEventListener","removeEventListener","close","loggedInUserId","getChatMessageClassName","messageSubmitHandler","preventDefault","messageData","toISOString","message_type","reader","FileReader","onloadend","media_file","result","type","startsWith","send","stringify","readAsDataURL","sendTypingSignal","chatMessageTypingHandler","keyCode","ENTER_KEY_CODE","clearTimeout","setTimeout","handleImageClick","src","closePreview","handleProfileClick","id","push","className","children","image","alt","width","height","style","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","index","userName","getTimeFromDate","maxWidth","maxHeight","onSubmit","htmlFor","onChange","target","files","value","onKeyUp","placeholder","autoComplete","_c","$RefreshReg$"],"sources":["/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/components/chatbody/ChatBody.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport ApiConnector from \"../../api/apiConnector\";\nimport ApiEndpoints from \"../../api/apiEndpoints\";\nimport ServerUrl from \"../../api/serverUrl\";\nimport Constants from \"../../lib/constants\";\nimport SocketActions from \"../../lib/socketActions\";\nimport CommonUtil from \"../../util/commonUtil\";\nimport \"./chatBodyStyle.css\";\nimport { FaPaperclip } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom'; // Import useHistory\n\nconst ChatBody = ({ match, currentChattingMember, setOnlineUserList }) => {\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [messages, setMessages] = useState({ results: [] });\n  const [typing, setTyping] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const socketRef = useRef(null);\n  const typingTimerRef = useRef(null);\n  const isTypingSignalSentRef = useRef(false);\n  const history = useHistory(); // Use useHistory for navigation\n\n  const getDateLabel = (timestamp) => {\n    const messageDate = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(today.getDate() - 1);\n\n    if (messageDate.toDateString() === today.toDateString()) {\n      return \"Today\";\n    } else if (messageDate.toDateString() === yesterday.toDateString()) {\n      return \"Yesterday\";\n    } else {\n      return messageDate.toLocaleDateString();\n    }\n  };\n\n  const fetchChatMessage = useCallback(async (currentChatId) => {\n    if (currentChatId) {\n      try {\n        const url =\n          ApiEndpoints.CHAT_MESSAGE_URL.replace(\n            Constants.CHAT_ID_PLACE_HOLDER,\n            currentChatId\n          ) + \"?limit=20&offset=0\";\n        const chatMessages = await ApiConnector.sendGetRequest(url);\n\n        const messagesWithLabels = chatMessages.results.map((message) => ({\n          ...message,\n          dateLabel: getDateLabel(message.timestamp),\n        }));\n\n        setMessages({ results: messagesWithLabels });\n      } catch (error) {\n        console.error(\"Failed to fetch chat messages:\", error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessage(currentChatId);\n  }, [match, fetchChatMessage]);\n\n  useEffect(() => {\n    socketRef.current = new WebSocket(\n      ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`\n    );\n\n    const handleMessage = (event) => {\n      const data = JSON.parse(event.data);\n      const chatId = CommonUtil.getActiveChatId(match);\n      const userId = CommonUtil.getUserId();\n\n      if (chatId === data.roomId) {\n        if (data.action === SocketActions.MESSAGE) {\n          data[\"userImage\"] = ServerUrl.BASE_URL.slice(0, -1) + data.userImage;\n          data.dateLabel = getDateLabel(data.timestamp);\n          setMessages((prevState) => ({\n            results: [data, ...prevState.results],\n          }));\n          setTyping(false);\n        } else if (data.action === SocketActions.TYPING && data.user !== userId) {\n          setTyping(data.typing);\n        }\n      }\n      if (data.action === SocketActions.ONLINE_USER) {\n        setOnlineUserList(data.userList);\n      }\n    };\n\n    socketRef.current.addEventListener(\"message\", handleMessage);\n\n    return () => {\n      socketRef.current.removeEventListener(\"message\", handleMessage);\n      socketRef.current.close();\n    };\n  }, [match, setOnlineUserList]);\n\n  const loggedInUserId = CommonUtil.getUserId();\n  const getChatMessageClassName = (userId) => {\n    return loggedInUserId === userId\n      ? \"chat-message-right pb-3\"\n      : \"chat-message-left pb-3\";\n  };\n\n  const messageSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputMessage || selectedFile) {\n      const messageData = {\n        action: SocketActions.MESSAGE,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match),\n        timestamp: new Date().toISOString(),\n      };\n\n      if (inputMessage) {\n        messageData.message = inputMessage;\n        messageData.message_type = 'text';\n      }\n\n      if (selectedFile) {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          messageData.media_file = reader.result;\n          messageData.message_type = selectedFile.type.startsWith('image/')\n            ? 'image'\n            : 'document';\n          socketRef.current.send(JSON.stringify(messageData));\n        };\n        reader.readAsDataURL(selectedFile);\n      } else {\n        socketRef.current.send(JSON.stringify(messageData));\n      }\n    }\n    setInputMessage(\"\");\n    setSelectedFile(null);\n  };\n\n  const sendTypingSignal = (typing) => {\n    socketRef.current.send(\n      JSON.stringify({\n        action: SocketActions.TYPING,\n        typing: typing,\n        user: CommonUtil.getUserId(),\n        roomId: CommonUtil.getActiveChatId(match),\n      })\n    );\n  };\n\n  const chatMessageTypingHandler = (event) => {\n    if (event.keyCode !== Constants.ENTER_KEY_CODE) {\n      if (!isTypingSignalSentRef.current) {\n        sendTypingSignal(true);\n        isTypingSignalSentRef.current = true;\n      }\n      clearTimeout(typingTimerRef.current);\n      typingTimerRef.current = setTimeout(() => {\n        sendTypingSignal(false);\n        isTypingSignalSentRef.current = false;\n      }, 3000);\n    } else {\n      clearTimeout(typingTimerRef.current);\n      isTypingSignalSentRef.current = false;\n    }\n  };\n\n  const handleImageClick = (src) => {\n    setPreviewImage(src);\n  };\n\n  const closePreview = () => {\n    setPreviewImage(null);\n  };\n\n  const handleProfileClick = () => {\n    const userId = currentChattingMember?.id; // or however you get the user ID\n    history.push(`/profile/${userId}`); // Navigate to profile page\n  };\n\n  return (\n    <div className=\"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-10 pl-0 pr-0\">\n      <div className=\"py-2 px-4 border-bottom d-none d-lg-block\">\n        <div className=\"d-flex align-items-center py-1\">\n          <div className=\"position-relative\">\n            <img\n              src={currentChattingMember?.image || '/path/to/default-image.png'}\n              className=\"rounded-circle mr-1\"\n              alt=\"User\"\n              width=\"40\"\n              height=\"40\"\n              style={{ cursor: 'pointer' }}\n              onClick={handleProfileClick} // Add click handler\n            />\n          </div>\n          <div className=\"flex-grow-1 pl-3\">\n            <strong\n              style={{ cursor: 'pointer' }}\n              onClick={handleProfileClick} // Add click handler\n            >\n              {currentChattingMember?.name || 'Unknown User'}\n            </strong>\n          </div>\n        </div>\n      </div>\n      <div className=\"position-relative\">\n        <div\n          id=\"chat-message-container\"\n          className=\"chat-messages pl-4 pt-4 pr-4 pb-1 d-flex flex-column-reverse\"\n        >\n          {typing && (\n            <div className=\"chat-message-left chat-bubble mb-1\">\n              <div className=\"typing\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n              </div>\n            </div>\n          )}\n          {messages.results.map((message, index) => (\n            <div key={index}>\n              {index === 0 || messages.results[index - 1].dateLabel !== message.dateLabel ? (\n                <div className=\"chat-date-label\">{message.dateLabel}</div>\n              ) : null}\n              <div className={getChatMessageClassName(message.user)}>\n                <div>\n                  <img\n                    src={message.userImage || '/path/to/default-image.png'}\n                    className=\"rounded-circle mr-1\"\n                    alt={message.userName}\n                    width=\"40\"\n                    height=\"40\"\n                  />\n                  <div className=\"\">\n                    {CommonUtil.getTimeFromDate(message.timestamp)}\n                  </div>\n                </div>\n                <div className=\"flex-shrink-1 bg-light ml-1 rounded py-2 px-3 mr-3\">\n                  <div className=\"font-weight-bold mb-1\">{message.userName}</div>\n                  {message.message_type === 'text' && message.message}\n                  {message.message_type === 'image' && (\n                    <div>\n                      <img\n                        src={message.media_file}\n                        alt=\"media preview\"\n                        style={{\n                          maxWidth: '300px',\n                          maxHeight: '300px',\n                          cursor: 'pointer'\n                        }}\n                        onClick={() => handleImageClick(message.media_file)}\n                      />\n                    </div>\n                  )}\n                  {message.message_type === 'document' && (\n                    <div>Document: {message.media_file}</div>\n                  )}\n                  {message.message_type === 'contact' && (\n                    <div>Contact: {message.message}</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"flex-grow-0 py-3 px-4 border-top\">\n        <form onSubmit={messageSubmitHandler}>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <label className=\"input-group-text\" htmlFor=\"chat-message-file\">\n                <FaPaperclip />\n              </label>\n              <input\n                type=\"file\"\n                id=\"chat-message-file\"\n                className=\"d-none\"\n                onChange={(event) => setSelectedFile(event.target.files[0])}\n              />\n            </div>\n            <input\n              onChange={(event) => setInputMessage(event.target.value)}\n              onKeyUp={chatMessageTypingHandler}\n              value={inputMessage}\n              id=\"chat-message-input\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Type your message\"\n              autoComplete=\"off\"\n            />\n            <button\n              id=\"chat-message-submit\"\n              className=\"btn btn-outline-warning\"\n            >\n              Send\n            </button>\n          </div>\n        </form>\n      </div>\n\n      {/* Image Preview Modal */}\n      {previewImage && (\n        <div className=\"image-preview-modal\" onClick={closePreview}>\n          <img src={previewImage} alt=\"Preview\" className=\"image-preview\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBody;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,qBAAqB;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,OAAO,EAAE;EAAG,CAAC,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM6B,SAAS,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM4B,cAAc,GAAG5B,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM6B,qBAAqB,GAAG7B,MAAM,CAAC,KAAK,CAAC;EAC3C,MAAM8B,OAAO,GAAGtB,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9B,MAAMuB,YAAY,GAAIC,SAAS,IAAK;IAClC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IACvC,MAAMG,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IACxB,MAAME,SAAS,GAAG,IAAIF,IAAI,CAAC,CAAC;IAC5BE,SAAS,CAACC,OAAO,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAEtC,IAAIL,WAAW,CAACM,YAAY,CAAC,CAAC,KAAKJ,KAAK,CAACI,YAAY,CAAC,CAAC,EAAE;MACvD,OAAO,OAAO;IAChB,CAAC,MAAM,IAAIN,WAAW,CAACM,YAAY,CAAC,CAAC,KAAKH,SAAS,CAACG,YAAY,CAAC,CAAC,EAAE;MAClE,OAAO,WAAW;IACpB,CAAC,MAAM;MACL,OAAON,WAAW,CAACO,kBAAkB,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG1C,WAAW,CAAC,MAAO2C,aAAa,IAAK;IAC5D,IAAIA,aAAa,EAAE;MACjB,IAAI;QACF,MAAMC,GAAG,GACPzC,YAAY,CAAC0C,gBAAgB,CAACC,OAAO,CACnCzC,SAAS,CAAC0C,oBAAoB,EAC9BJ,aACF,CAAC,GAAG,oBAAoB;QAC1B,MAAMK,YAAY,GAAG,MAAM9C,YAAY,CAAC+C,cAAc,CAACL,GAAG,CAAC;QAE3D,MAAMM,kBAAkB,GAAGF,YAAY,CAAC3B,OAAO,CAAC8B,GAAG,CAAEC,OAAO,KAAM;UAChE,GAAGA,OAAO;UACVC,SAAS,EAAErB,YAAY,CAACoB,OAAO,CAACnB,SAAS;QAC3C,CAAC,CAAC,CAAC;QAEHb,WAAW,CAAC;UAAEC,OAAO,EAAE6B;QAAmB,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAENxD,SAAS,CAAC,MAAM;IACd,MAAM6C,aAAa,GAAGpC,UAAU,CAACiD,eAAe,CAAC3C,KAAK,CAAC;IACvD6B,gBAAgB,CAACC,aAAa,CAAC;EACjC,CAAC,EAAE,CAAC9B,KAAK,EAAE6B,gBAAgB,CAAC,CAAC;EAE7B5C,SAAS,CAAC,MAAM;IACd8B,SAAS,CAAC6B,OAAO,GAAG,IAAIC,SAAS,CAC/BtD,SAAS,CAACuD,WAAW,GAAG,YAAYpD,UAAU,CAACqD,SAAS,CAAC,CAAC,QAC5D,CAAC;IAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;MAC/B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnC,MAAMG,MAAM,GAAG3D,UAAU,CAACiD,eAAe,CAAC3C,KAAK,CAAC;MAChD,MAAMsD,MAAM,GAAG5D,UAAU,CAACqD,SAAS,CAAC,CAAC;MAErC,IAAIM,MAAM,KAAKH,IAAI,CAACK,MAAM,EAAE;QAC1B,IAAIL,IAAI,CAACM,MAAM,KAAK/D,aAAa,CAACgE,OAAO,EAAE;UACzCP,IAAI,CAAC,WAAW,CAAC,GAAG3D,SAAS,CAACmE,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGT,IAAI,CAACU,SAAS;UACpEV,IAAI,CAACV,SAAS,GAAGrB,YAAY,CAAC+B,IAAI,CAAC9B,SAAS,CAAC;UAC7Cb,WAAW,CAAEsD,SAAS,KAAM;YAC1BrD,OAAO,EAAE,CAAC0C,IAAI,EAAE,GAAGW,SAAS,CAACrD,OAAO;UACtC,CAAC,CAAC,CAAC;UACHE,SAAS,CAAC,KAAK,CAAC;QAClB,CAAC,MAAM,IAAIwC,IAAI,CAACM,MAAM,KAAK/D,aAAa,CAACqE,MAAM,IAAIZ,IAAI,CAACa,IAAI,KAAKT,MAAM,EAAE;UACvE5C,SAAS,CAACwC,IAAI,CAACzC,MAAM,CAAC;QACxB;MACF;MACA,IAAIyC,IAAI,CAACM,MAAM,KAAK/D,aAAa,CAACuE,WAAW,EAAE;QAC7C9D,iBAAiB,CAACgD,IAAI,CAACe,QAAQ,CAAC;MAClC;IACF,CAAC;IAEDlD,SAAS,CAAC6B,OAAO,CAACsB,gBAAgB,CAAC,SAAS,EAAElB,aAAa,CAAC;IAE5D,OAAO,MAAM;MACXjC,SAAS,CAAC6B,OAAO,CAACuB,mBAAmB,CAAC,SAAS,EAAEnB,aAAa,CAAC;MAC/DjC,SAAS,CAAC6B,OAAO,CAACwB,KAAK,CAAC,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACpE,KAAK,EAAEE,iBAAiB,CAAC,CAAC;EAE9B,MAAMmE,cAAc,GAAG3E,UAAU,CAACqD,SAAS,CAAC,CAAC;EAC7C,MAAMuB,uBAAuB,GAAIhB,MAAM,IAAK;IAC1C,OAAOe,cAAc,KAAKf,MAAM,GAC5B,yBAAyB,GACzB,wBAAwB;EAC9B,CAAC;EAED,MAAMiB,oBAAoB,GAAItB,KAAK,IAAK;IACtCA,KAAK,CAACuB,cAAc,CAAC,CAAC;IACtB,IAAIpE,YAAY,IAAIO,YAAY,EAAE;MAChC,MAAM8D,WAAW,GAAG;QAClBjB,MAAM,EAAE/D,aAAa,CAACgE,OAAO;QAC7BM,IAAI,EAAErE,UAAU,CAACqD,SAAS,CAAC,CAAC;QAC5BQ,MAAM,EAAE7D,UAAU,CAACiD,eAAe,CAAC3C,KAAK,CAAC;QACzCoB,SAAS,EAAE,IAAIE,IAAI,CAAC,CAAC,CAACoD,WAAW,CAAC;MACpC,CAAC;MAED,IAAItE,YAAY,EAAE;QAChBqE,WAAW,CAAClC,OAAO,GAAGnC,YAAY;QAClCqE,WAAW,CAACE,YAAY,GAAG,MAAM;MACnC;MAEA,IAAIhE,YAAY,EAAE;QAChB,MAAMiE,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;UACvBL,WAAW,CAACM,UAAU,GAAGH,MAAM,CAACI,MAAM;UACtCP,WAAW,CAACE,YAAY,GAAGhE,YAAY,CAACsE,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,GAC7D,OAAO,GACP,UAAU;UACdnE,SAAS,CAAC6B,OAAO,CAACuC,IAAI,CAAChC,IAAI,CAACiC,SAAS,CAACX,WAAW,CAAC,CAAC;QACrD,CAAC;QACDG,MAAM,CAACS,aAAa,CAAC1E,YAAY,CAAC;MACpC,CAAC,MAAM;QACLI,SAAS,CAAC6B,OAAO,CAACuC,IAAI,CAAChC,IAAI,CAACiC,SAAS,CAACX,WAAW,CAAC,CAAC;MACrD;IACF;IACApE,eAAe,CAAC,EAAE,CAAC;IACnBO,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAM0E,gBAAgB,GAAI7E,MAAM,IAAK;IACnCM,SAAS,CAAC6B,OAAO,CAACuC,IAAI,CACpBhC,IAAI,CAACiC,SAAS,CAAC;MACb5B,MAAM,EAAE/D,aAAa,CAACqE,MAAM;MAC5BrD,MAAM,EAAEA,MAAM;MACdsD,IAAI,EAAErE,UAAU,CAACqD,SAAS,CAAC,CAAC;MAC5BQ,MAAM,EAAE7D,UAAU,CAACiD,eAAe,CAAC3C,KAAK;IAC1C,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMuF,wBAAwB,GAAItC,KAAK,IAAK;IAC1C,IAAIA,KAAK,CAACuC,OAAO,KAAKhG,SAAS,CAACiG,cAAc,EAAE;MAC9C,IAAI,CAACxE,qBAAqB,CAAC2B,OAAO,EAAE;QAClC0C,gBAAgB,CAAC,IAAI,CAAC;QACtBrE,qBAAqB,CAAC2B,OAAO,GAAG,IAAI;MACtC;MACA8C,YAAY,CAAC1E,cAAc,CAAC4B,OAAO,CAAC;MACpC5B,cAAc,CAAC4B,OAAO,GAAG+C,UAAU,CAAC,MAAM;QACxCL,gBAAgB,CAAC,KAAK,CAAC;QACvBrE,qBAAqB,CAAC2B,OAAO,GAAG,KAAK;MACvC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL8C,YAAY,CAAC1E,cAAc,CAAC4B,OAAO,CAAC;MACpC3B,qBAAqB,CAAC2B,OAAO,GAAG,KAAK;IACvC;EACF,CAAC;EAED,MAAMgD,gBAAgB,GAAIC,GAAG,IAAK;IAChC/E,eAAe,CAAC+E,GAAG,CAAC;EACtB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBhF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMiF,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMzC,MAAM,GAAGrD,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAE+F,EAAE,CAAC,CAAC;IAC1C9E,OAAO,CAAC+E,IAAI,CAAC,YAAY3C,MAAM,EAAE,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACExD,OAAA;IAAKoG,SAAS,EAAC,uDAAuD;IAAAC,QAAA,gBACpErG,OAAA;MAAKoG,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACxDrG,OAAA;QAAKoG,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CrG,OAAA;UAAKoG,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChCrG,OAAA;YACE+F,GAAG,EAAE,CAAA5F,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEmG,KAAK,KAAI,4BAA6B;YAClEF,SAAS,EAAC,qBAAqB;YAC/BG,GAAG,EAAC,MAAM;YACVC,KAAK,EAAC,IAAI;YACVC,MAAM,EAAC,IAAI;YACXC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAU,CAAE;YAC7BC,OAAO,EAAEX,kBAAmB,CAAC;UAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhH,OAAA;UAAKoG,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BrG,OAAA;YACE0G,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAU,CAAE;YAC7BC,OAAO,EAAEX,kBAAmB,CAAC;YAAA;YAAAI,QAAA,EAE5B,CAAAlG,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAE8G,IAAI,KAAI;UAAc;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhH,OAAA;MAAKoG,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCrG,OAAA;QACEkG,EAAE,EAAC,wBAAwB;QAC3BE,SAAS,EAAC,8DAA8D;QAAAC,QAAA,GAEvE1F,MAAM,iBACLX,OAAA;UAAKoG,SAAS,EAAC,oCAAoC;UAAAC,QAAA,eACjDrG,OAAA;YAAKoG,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBACrBrG,OAAA;cAAKoG,SAAS,EAAC;YAAK;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC3BhH,OAAA;cAAKoG,SAAS,EAAC;YAAK;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC3BhH,OAAA;cAAKoG,SAAS,EAAC;YAAK;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EACAxG,QAAQ,CAACE,OAAO,CAAC8B,GAAG,CAAC,CAACC,OAAO,EAAEyE,KAAK,kBACnClH,OAAA;UAAAqG,QAAA,GACGa,KAAK,KAAK,CAAC,IAAI1G,QAAQ,CAACE,OAAO,CAACwG,KAAK,GAAG,CAAC,CAAC,CAACxE,SAAS,KAAKD,OAAO,CAACC,SAAS,gBACzE1C,OAAA;YAAKoG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAE5D,OAAO,CAACC;UAAS;YAAAmE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GACxD,IAAI,eACRhH,OAAA;YAAKoG,SAAS,EAAE5B,uBAAuB,CAAC/B,OAAO,CAACwB,IAAI,CAAE;YAAAoC,QAAA,gBACpDrG,OAAA;cAAAqG,QAAA,gBACErG,OAAA;gBACE+F,GAAG,EAAEtD,OAAO,CAACqB,SAAS,IAAI,4BAA6B;gBACvDsC,SAAS,EAAC,qBAAqB;gBAC/BG,GAAG,EAAE9D,OAAO,CAAC0E,QAAS;gBACtBX,KAAK,EAAC,IAAI;gBACVC,MAAM,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACFhH,OAAA;gBAAKoG,SAAS,EAAC,EAAE;gBAAAC,QAAA,EACdzG,UAAU,CAACwH,eAAe,CAAC3E,OAAO,CAACnB,SAAS;cAAC;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhH,OAAA;cAAKoG,SAAS,EAAC,oDAAoD;cAAAC,QAAA,gBACjErG,OAAA;gBAAKoG,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAE5D,OAAO,CAAC0E;cAAQ;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EAC9DvE,OAAO,CAACoC,YAAY,KAAK,MAAM,IAAIpC,OAAO,CAACA,OAAO,EAClDA,OAAO,CAACoC,YAAY,KAAK,OAAO,iBAC/B7E,OAAA;gBAAAqG,QAAA,eACErG,OAAA;kBACE+F,GAAG,EAAEtD,OAAO,CAACwC,UAAW;kBACxBsB,GAAG,EAAC,eAAe;kBACnBG,KAAK,EAAE;oBACLW,QAAQ,EAAE,OAAO;oBACjBC,SAAS,EAAE,OAAO;oBAClBX,MAAM,EAAE;kBACV,CAAE;kBACFC,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACrD,OAAO,CAACwC,UAAU;gBAAE;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN,EACAvE,OAAO,CAACoC,YAAY,KAAK,UAAU,iBAClC7E,OAAA;gBAAAqG,QAAA,GAAK,YAAU,EAAC5D,OAAO,CAACwC,UAAU;cAAA;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACzC,EACAvE,OAAO,CAACoC,YAAY,KAAK,SAAS,iBACjC7E,OAAA;gBAAAqG,QAAA,GAAK,WAAS,EAAC5D,OAAO,CAACA,OAAO;cAAA;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACrC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAzCEE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0CV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhH,OAAA;MAAKoG,SAAS,EAAC,kCAAkC;MAAAC,QAAA,eAC/CrG,OAAA;QAAMuH,QAAQ,EAAE9C,oBAAqB;QAAA4B,QAAA,eACnCrG,OAAA;UAAKoG,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrG,OAAA;YAAKoG,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCrG,OAAA;cAAOoG,SAAS,EAAC,kBAAkB;cAACoB,OAAO,EAAC,mBAAmB;cAAAnB,QAAA,eAC7DrG,OAAA,CAACH,WAAW;gBAAAgH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACRhH,OAAA;cACEmF,IAAI,EAAC,MAAM;cACXe,EAAE,EAAC,mBAAmB;cACtBE,SAAS,EAAC,QAAQ;cAClBqB,QAAQ,EAAGtE,KAAK,IAAKrC,eAAe,CAACqC,KAAK,CAACuE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNhH,OAAA;YACEyH,QAAQ,EAAGtE,KAAK,IAAK5C,eAAe,CAAC4C,KAAK,CAACuE,MAAM,CAACE,KAAK,CAAE;YACzDC,OAAO,EAAEpC,wBAAyB;YAClCmC,KAAK,EAAEtH,YAAa;YACpB4F,EAAE,EAAC,oBAAoB;YACvBf,IAAI,EAAC,MAAM;YACXiB,SAAS,EAAC,cAAc;YACxB0B,WAAW,EAAC,mBAAmB;YAC/BC,YAAY,EAAC;UAAK;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACFhH,OAAA;YACEkG,EAAE,EAAC,qBAAqB;YACxBE,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EACpC;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAGLjG,YAAY,iBACXf,OAAA;MAAKoG,SAAS,EAAC,qBAAqB;MAACQ,OAAO,EAAEZ,YAAa;MAAAK,QAAA,eACzDrG,OAAA;QAAK+F,GAAG,EAAEhF,YAAa;QAACwF,GAAG,EAAC,SAAS;QAACH,SAAS,EAAC;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3G,EAAA,CA1SIJ,QAAQ;EAAA,QAUIH,UAAU;AAAA;AAAAkI,EAAA,GAVtB/H,QAAQ;AA4Sd,eAAeA,QAAQ;AAAC,IAAA+H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
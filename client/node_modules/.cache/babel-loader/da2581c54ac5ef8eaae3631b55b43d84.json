{"ast":null,"code":"var _jsxFileName = \"/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/components/chatbody/ChatBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ApiConnector from '../../api/apiConnector';\nimport ApiEndpoints from '../../api/apiEndpoints';\nimport ServerUrl from '../../api/serverUrl';\nimport Constants from '../../lib/constants';\nimport SocketActions from '../../lib/socketActions';\nimport CommonUtil from '../../util/commonUtil';\nimport './chatBodyStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatBody = _ref => {\n  _s();\n\n  let {\n    match,\n    currentChattingMember,\n    setOnlineUserList\n  } = _ref;\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [typing, setTyping] = useState(false);\n  const [mediaFile, setMediaFile] = useState(null);\n  const [contactInfo, setContactInfo] = useState({\n    name: '',\n    phone: ''\n  });\n  const socket = new WebSocket(ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`);\n  const fetchChatMessages = useCallback(async currentChatId => {\n    if (currentChatId) {\n      const url = `${ApiEndpoints.CHAT_MESSAGE_URL.replace(Constants.CHAT_ID_PLACE_HOLDER, currentChatId)}?limit=20&offset=0`;\n      const chatMessages = await ApiConnector.sendGetRequest(url);\n      setMessages(chatMessages);\n    }\n  }, []);\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessages(currentChatId);\n  }, [match, fetchChatMessages]);\n\n  const messageSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (inputMessage || mediaFile || contactInfo.name) {\n      const formData = new FormData();\n      formData.append('message', inputMessage);\n      formData.append('media_file', mediaFile);\n      formData.append('contact_info', JSON.stringify(contactInfo));\n      formData.append('action', SocketActions.MESSAGE);\n      formData.append('user', CommonUtil.getUserId());\n      formData.append('roomId', CommonUtil.getActiveChatId(match));\n      socket.send(formData);\n      setInputMessage('');\n      setMediaFile(null);\n      setContactInfo({\n        name: '',\n        phone: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-body\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: messageSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Type your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setMediaFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: contactInfo.name,\n        onChange: e => setContactInfo({ ...contactInfo,\n          name: e.target.value\n        }),\n        placeholder: \"Contact Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: contactInfo.phone,\n        onChange: e => setContactInfo({ ...contactInfo,\n          phone: e.target.value\n        }),\n        placeholder: \"Contact Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatBody, \"T4gTI3ff13cHiZE6xRKTksFPExQ=\");\n\n_c = ChatBody;\nexport default ChatBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"sources":["/media/ts/fc248944-f5bc-4874-8086-ae2a42a47c5b/home/ts/Desktop/Ashish Singh/Full_Stack/Chat_webapplication/client/src/components/chatbody/ChatBody.js"],"names":["React","useState","useCallback","useEffect","ApiConnector","ApiEndpoints","ServerUrl","Constants","SocketActions","CommonUtil","ChatBody","match","currentChattingMember","setOnlineUserList","inputMessage","setInputMessage","messages","setMessages","typing","setTyping","mediaFile","setMediaFile","contactInfo","setContactInfo","name","phone","socket","WebSocket","WS_BASE_URL","getUserId","fetchChatMessages","currentChatId","url","CHAT_MESSAGE_URL","replace","CHAT_ID_PLACE_HOLDER","chatMessages","sendGetRequest","getActiveChatId","messageSubmitHandler","event","preventDefault","formData","FormData","append","JSON","stringify","MESSAGE","send","e","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport ApiConnector from '../../api/apiConnector';\nimport ApiEndpoints from '../../api/apiEndpoints';\nimport ServerUrl from '../../api/serverUrl';\nimport Constants from '../../lib/constants';\nimport SocketActions from '../../lib/socketActions';\nimport CommonUtil from '../../util/commonUtil';\nimport './chatBodyStyle.css';\n\nconst ChatBody = ({ match, currentChattingMember, setOnlineUserList }) => {\n  const [inputMessage, setInputMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [typing, setTyping] = useState(false);\n  const [mediaFile, setMediaFile] = useState(null);\n  const [contactInfo, setContactInfo] = useState({ name: '', phone: '' });\n\n  const socket = new WebSocket(\n    ServerUrl.WS_BASE_URL + `ws/users/${CommonUtil.getUserId()}/chat/`\n  );\n\n  const fetchChatMessages = useCallback(async (currentChatId) => {\n    if (currentChatId) {\n      const url = `${ApiEndpoints.CHAT_MESSAGE_URL.replace(Constants.CHAT_ID_PLACE_HOLDER, currentChatId)}?limit=20&offset=0`;\n      const chatMessages = await ApiConnector.sendGetRequest(url);\n      setMessages(chatMessages);\n    }\n  }, []);\n\n  useEffect(() => {\n    const currentChatId = CommonUtil.getActiveChatId(match);\n    fetchChatMessages(currentChatId);\n  }, [match, fetchChatMessages]);\n\n  const messageSubmitHandler = async (event) => {\n    event.preventDefault();\n    if (inputMessage || mediaFile || contactInfo.name) {\n      const formData = new FormData();\n      formData.append('message', inputMessage);\n      formData.append('media_file', mediaFile);\n      formData.append('contact_info', JSON.stringify(contactInfo));\n      formData.append('action', SocketActions.MESSAGE);\n      formData.append('user', CommonUtil.getUserId());\n      formData.append('roomId', CommonUtil.getActiveChatId(match));\n\n      socket.send(formData);\n      setInputMessage('');\n      setMediaFile(null);\n      setContactInfo({ name: '', phone: '' });\n    }\n  };\n\n  return (\n    <div className=\"chat-body\">\n      {/* Chat Header, Messages, and Typing Indicator */}\n      <form onSubmit={messageSubmitHandler}>\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          placeholder=\"Type your message\"\n        />\n        <input\n          type=\"file\"\n          onChange={(e) => setMediaFile(e.target.files[0])}\n        />\n        <input\n          type=\"text\"\n          value={contactInfo.name}\n          onChange={(e) => setContactInfo({ ...contactInfo, name: e.target.value })}\n          placeholder=\"Contact Name\"\n        />\n        <input\n          type=\"text\"\n          value={contactInfo.phone}\n          onChange={(e) => setContactInfo({ ...contactInfo, phone: e.target.value })}\n          placeholder=\"Contact Phone\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatBody;\n"]},"metadata":{},"sourceType":"module"}
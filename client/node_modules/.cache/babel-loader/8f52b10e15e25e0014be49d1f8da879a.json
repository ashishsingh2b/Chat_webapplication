{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport Constants from \"../lib/constants\";\nimport CookieUtil from \"./cookieUtil\";\n\nconst is_date = date => {\n  if (Object.prototype.toString.call(date) === \"[object Date]\") {\n    return true;\n  }\n\n  return false;\n};\n\nconst getTimeFromDate = date => {\n  let dateObj = is_date(date) ? date : new Date(date);\n  let hour = dateObj.getHours();\n  let minute = dateObj.getMinutes();\n  let meridian = \"am\";\n\n  if (hour > 12) {\n    hour -= 12;\n    meridian = \"pm\";\n  }\n\n  if (hour === 0) {\n    hour = 12;\n  }\n\n  if (minute < 10) {\n    minute = \"0\" + minute;\n  }\n\n  return hour + \":\" + minute + \" \" + meridian;\n};\n\nconst getUserId = () => {\n  let token = CookieUtil.getCookie(Constants.ACCESS_PROPERTY);\n\n  if (token) {\n    let decodedToken = jwt_decode(token);\n    return decodedToken.userId;\n  }\n\n  return \"\";\n};\n\nconst getFormatedChatUser = (chatUsers, onlineUserList) => {\n  const userId = getUserId();\n  return chatUsers.reduce((acumulator, item) => {\n    if (item.type === \"DM\" || item.type === \"SELF\") {\n      let newResult = {};\n      newResult[\"roomId\"] = item.roomId;\n      let member = null;\n\n      for (let user of item.member) {\n        if (user.id !== userId || item.type === \"SELF\") {\n          member = user;\n        }\n      }\n\n      if (member) {\n        newResult[\"name\"] = member.first_name + \" \" + member.last_name;\n        newResult[\"image\"] = member.image;\n        newResult[\"id\"] = member.id;\n        newResult[\"isOnline\"] = onlineUserList === null || onlineUserList === void 0 ? void 0 : onlineUserList.includes(member.id);\n      }\n\n      acumulator.push(newResult);\n      return acumulator;\n    }\n\n    return acumulator;\n  }, []);\n};\n\nconst getActiveChatId = match => {\n  return match && match.params ? match.params.chatId : null;\n};\n\nconst CommonUtil = {\n  getTimeFromDate: getTimeFromDate,\n  getUserId: getUserId,\n  getFormatedChatUser: getFormatedChatUser,\n  getActiveChatId: getActiveChatId\n};\nexport default CommonUtil;","map":{"version":3,"sources":["/home/ts/Downloads/django-chat-main/client/src/util/commonUtil.js"],"names":["jwt_decode","Constants","CookieUtil","is_date","date","Object","prototype","toString","call","getTimeFromDate","dateObj","Date","hour","getHours","minute","getMinutes","meridian","getUserId","token","getCookie","ACCESS_PROPERTY","decodedToken","userId","getFormatedChatUser","chatUsers","onlineUserList","reduce","acumulator","item","type","newResult","roomId","member","user","id","first_name","last_name","image","includes","push","getActiveChatId","match","params","chatId","CommonUtil"],"mappings":"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","sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport Constants from \"../lib/constants\";\nimport CookieUtil from \"./cookieUtil\";\n\nconst is_date = (date) => {\n  if (Object.prototype.toString.call(date) === \"[object Date]\") {\n    return true;\n  }\n  return false;\n};\n\nconst getTimeFromDate = (date) => {\n  let dateObj = is_date(date) ? date : new Date(date);\n  let hour = dateObj.getHours();\n  let minute = dateObj.getMinutes();\n  let meridian = \"am\";\n  if (hour > 12) {\n    hour -= 12;\n    meridian = \"pm\";\n  }\n  if (hour === 0) {\n    hour = 12;\n  }\n  if (minute < 10) {\n    minute = \"0\" + minute;\n  }\n  return hour + \":\" + minute + \" \" + meridian;\n};\n\nconst getUserId = () => {\n  let token = CookieUtil.getCookie(Constants.ACCESS_PROPERTY);\n  if (token) {\n    let decodedToken = jwt_decode(token);\n    return decodedToken.userId;\n  }\n  return \"\";\n};\n\nconst getFormatedChatUser = (chatUsers, onlineUserList) => {\n  const userId = getUserId();\n  return chatUsers.reduce((acumulator, item) => {\n    if (item.type === \"DM\" || item.type === \"SELF\") {\n      let newResult = {};\n      newResult[\"roomId\"] = item.roomId;\n      let member = null;\n      for (let user of item.member) {\n        if (user.id !== userId || item.type === \"SELF\") {\n          member = user;\n        }\n      }\n      if (member) {\n        newResult[\"name\"] = member.first_name + \" \" + member.last_name;\n        newResult[\"image\"] = member.image;\n        newResult[\"id\"] = member.id;\n        newResult[\"isOnline\"] = onlineUserList?.includes(member.id);\n      }\n      acumulator.push(newResult);\n      return acumulator;\n    }\n    return acumulator;\n  }, []);\n};\n\nconst getActiveChatId = (match) => {\n  return match && match.params ? match.params.chatId : null;\n};\n\nconst CommonUtil = {\n  getTimeFromDate: getTimeFromDate,\n  getUserId: getUserId,\n  getFormatedChatUser: getFormatedChatUser,\n  getActiveChatId: getActiveChatId,\n};\n\nexport default CommonUtil;\n"]},"metadata":{},"sourceType":"module"}
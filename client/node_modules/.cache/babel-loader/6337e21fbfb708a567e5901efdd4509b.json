{"ast":null,"code":"var _jsxFileName = \"/home/ts/Downloads/django-chat-main/client/src/screens/auth/login/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport ApiConnector from \"../../../api/apiConnector\";\nimport ApiEndpoints from \"../../../api/apiEndpoints\";\nimport AppPaths from \"../../../lib/appPaths\";\nimport CookieUtil from \"../../../util/cookieUtil\";\nimport \"../authStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = async loginData => {\n    const successLoginData = await ApiConnector.sendPostRequest(ApiEndpoints.LOGIN_URL, JSON.stringify(loginData), false, false);\n\n    if (successLoginData) {\n      Object.keys(successLoginData).forEach(key => {\n        CookieUtil.setCookie(key, successLoginData[key]);\n      });\n      window.location.href = AppPaths.HOME;\n    }\n  };\n\n  const getLoginMessage = () => {\n    if (location && location.state && location.state.redirectFrom === AppPaths.SIGN_UP) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loginMessage\",\n        children: \"Your account has been created successfully. Please login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"authFormContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"authForm\",\n      children: [getLoginMessage(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"authTitle\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"email\",\n            placeholder: \"Email\",\n            ...register(\"username\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authFieldContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"authField\",\n            type: \"password\",\n            placeholder: \"Password\",\n            ...register(\"password\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"requiredFieldError\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning btn-block\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"authFormFooter\",\n        children: [\"Don't have any account! \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 35\n        }, this), \" to singup.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginScreen, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/home/ts/Downloads/django-chat-main/client/src/screens/auth/login/LoginScreen.js"],"names":["React","useForm","Link","ApiConnector","ApiEndpoints","AppPaths","CookieUtil","LoginScreen","location","register","handleSubmit","formState","errors","onSubmit","loginData","successLoginData","sendPostRequest","LOGIN_URL","JSON","stringify","Object","keys","forEach","key","setCookie","window","href","HOME","getLoginMessage","state","redirectFrom","SIGN_UP","required","username","password"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport ApiConnector from \"../../../api/apiConnector\";\nimport ApiEndpoints from \"../../../api/apiEndpoints\";\nimport AppPaths from \"../../../lib/appPaths\";\nimport CookieUtil from \"../../../util/cookieUtil\";\nimport \"../authStyle.css\";\n\nconst LoginScreen = ({ location }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (loginData) => {\n    const successLoginData = await ApiConnector.sendPostRequest(\n      ApiEndpoints.LOGIN_URL,\n      JSON.stringify(loginData),\n      false,\n      false\n    );\n    if (successLoginData) {\n      Object.keys(successLoginData).forEach((key) => {\n        CookieUtil.setCookie(key, successLoginData[key]);\n      });\n      window.location.href = AppPaths.HOME;\n    }\n  };\n\n  const getLoginMessage = () => {\n    if (\n      location &&\n      location.state &&\n      location.state.redirectFrom === AppPaths.SIGN_UP\n    ) {\n      return (\n        <div id=\"loginMessage\">\n          Your account has been created successfully. Please login.\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div id=\"authFormContainer\">\n      <div id=\"authForm\">\n        {getLoginMessage()}\n        <h2 id=\"authTitle\">Login</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"email\"\n              placeholder=\"Email\"\n              {...register(\"username\", { required: true })}\n            />\n            {errors.username && (\n              <p className=\"requiredFieldError\">This field is required</p>\n            )}\n          </div>\n          <div className=\"authFieldContainer\">\n            <input\n              className=\"authField\"\n              type=\"password\"\n              placeholder=\"Password\"\n              {...register(\"password\", { required: true })}\n            />\n            {errors.password && (\n              <p className=\"requiredFieldError\">This field is required</p>\n            )}\n          </div>\n          <br />\n          <button className=\"btn btn-outline-warning btn-block\" type=\"submit\">\n            Login\n          </button>\n        </form>\n        <p id=\"authFormFooter\">\n          Don't have any account! <Link to=\"/signup\">Click here</Link> to\n          singup.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}